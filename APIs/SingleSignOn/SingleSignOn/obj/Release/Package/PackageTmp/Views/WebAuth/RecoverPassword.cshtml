@model SingleSignOn.Models.WebRecoverPasswordModel
@using SingleSignOn.Settings;
@using CaptchaMvc.HtmlHelpers
@using SingleSignOn.Resources;



<div class="space"></div>
<br />
@{ 
    ViewBag.Title = UserWebResource.TEXT_CHANGE_PASSWORD;
}
@{
    var catpcha = Html.Captcha(UserWebResource.TEXT_REFRESH_CAPTCHA_BUTTON, UserWebResource.TEXT_REFRESH_CAPTCHA_DESC, 5, UserWebResource.TEXT_CAPTCHA_NULL, true);
}

@Html.Partial("_Notifications")

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("RecoverPassword", "WebAuth", null, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m=>m.UserId)
            @Html.HiddenFor(m=>m.HashingData)
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PasswordType)
                        <select name="@Html.NameFor(m=>m.PasswordType)" class="form-control">
                            <option value="level1">Password level 1</option>
                            <option value="level2">Password level 2</option>
                        </select>
                    </div>
                </div>*@  
                <div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword)
                        @Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control", type="password" })
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>         
                <div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmNewPassword)
                        @Html.TextBoxFor(m => m.ConfirmNewPassword, new { @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>      
                @*<div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RecoverMethod)
                        <select name="@Html.NameFor(m=>m.RecoverMethod)" class="form-control">
                            <option value="EMAIL">Email</option>
                        </select>
                    </div>
                </div>*@  
                @*<div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Answer)
                        @Html.TextBoxFor(m => m.Answer, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Answer, "", new { @class = "text-danger" })
                    </div>
                </div>*@   
                <div class="col-sm-12 col-xs-12">
                    <div class="form-group">
                        @catpcha
                    </div>
                </div>
                <div class="col-md-12">
                    <button type="submit" class="width-35 btn btn-sm btn-primary">
                        @UserWebResource.TEXT_CHANGE_PASSWORD
                    </button>
                </div>
            </div>
        }
    </div>
</div>


@section PagePluginScripts{
    @catpcha.RenderScript()

    <script type="text/javascript">
        $(document).ready(function () {
            var refreshBtn = $('a[href="#CaptchaImage"]');
            refreshBtn.html('<button type="button" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-repeat" ></span > @UserWebResource.TEXT_REFRESH_CAPTCHA_BUTTON</button >');
            refreshBtn.prev("br").remove();
            $("#CaptchaInputText").addClass("form-control");
            $('span[data-valmsg-for="CaptchaInputText"]').addClass("text-danger");
            $('span[data-valmsg-for="CaptchaInputText"]').prev("br").remove();
        });
    </script>
}