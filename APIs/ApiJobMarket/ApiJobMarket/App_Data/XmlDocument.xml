<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiJobMarket</name>
    </assembly>
    <members>
        <member name="T:ApiJobMarket.Logging.ILog">
            <summary>
            Simple interface that represent a logger.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Logging.ILog.Log(ApiJobMarket.Logging.LogLevel,System.Func{System.String},System.Exception,System.Object[])">
            <summary>
            Log a message the specified log level.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="messageFunc">The message function.</param>
            <param name="exception">An optional exception.</param>
            <param name="formatParameters">Optional format parameters for the message generated by the messagefunc. </param>
            <returns>true if the message was logged. Otherwise false.</returns>
            <remarks>
            Note to implementers: the message func should not be called if the loglevel is not enabled
            so as not to incur performance penalties.
            
            To check IsEnabled call Log with only LogLevel and check the return value, no event will be written.
            </remarks>
        </member>
        <member name="T:ApiJobMarket.Logging.LogLevel">
            <summary>
            The log level.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Logging.ILogProvider">
            <summary>
            Represents a way to get a <see cref="T:ApiJobMarket.Logging.ILog"/>
            </summary>
        </member>
        <member name="M:ApiJobMarket.Logging.ILogProvider.GetLogger(System.String)">
            <summary>
            Gets the specified named logger.
            </summary>
            <param name="name">Name of the logger.</param>
            <returns>The logger reference.</returns>
        </member>
        <member name="M:ApiJobMarket.Logging.ILogProvider.OpenNestedContext(System.String)">
            <summary>
            Opens a nested diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="message">The message to add to the diagnostics context.</param>
            <returns>A disposable that when disposed removes the message from the context.</returns>
        </member>
        <member name="M:ApiJobMarket.Logging.ILogProvider.OpenMappedContext(System.String,System.String)">
            <summary>
            Opens a mapped diagnostics context. Not supported in EntLib logging.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <returns>A disposable that when disposed removes the map from the context.</returns>
        </member>
        <member name="T:ApiJobMarket.Logging.LogProvider">
            <summary>
            Provides a mechanism to create instances of <see cref="T:ApiJobMarket.Logging.ILog" /> objects.
            </summary>
        </member>
        <member name="F:ApiJobMarket.Logging.LogProvider.DisableLoggingEnvironmentVariable">
            <summary>
            The disable logging environment variable. If the environment variable is set to 'true', then logging
            will be disabled.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.SetCurrentLogProvider(ApiJobMarket.Logging.ILogProvider)">
            <summary>
            Sets the current log provider.
            </summary>
            <param name="logProvider">The log provider.</param>
        </member>
        <member name="P:ApiJobMarket.Logging.LogProvider.IsDisabled">
            <summary>
            Gets or sets a value indicating whether this is logging is disabled.
            </summary>
            <value>
            <c>true</c> if logging is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApiJobMarket.Logging.LogProvider.OnCurrentLogProviderSet">
            <summary>
            Sets an action that is invoked when a consumer of your library has called SetCurrentLogProvider. It is 
            important that hook into this if you are using child libraries (especially ilmerged ones) that are using
            LibLog (or other logging abstraction) so you adapt and delegate to them.
            <see cref="M:ApiJobMarket.Logging.LogProvider.SetCurrentLogProvider(ApiJobMarket.Logging.ILogProvider)"/> 
            </summary>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.For``1">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <typeparam name="T">The type whose name will be used for the logger.</typeparam>
            <returns>An instance of <see cref="T:ApiJobMarket.Logging.ILog"/></returns>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.GetCurrentClassLogger">
            <summary>
            Gets a logger for the current class.
            </summary>
            <returns>An instance of <see cref="T:ApiJobMarket.Logging.ILog"/></returns>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.GetLogger(System.Type)">
            <summary>
            Gets a logger for the specified type.
            </summary>
            <param name="type">The type whose name will be used for the logger.</param>
            <returns>An instance of <see cref="T:ApiJobMarket.Logging.ILog"/></returns>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.GetLogger(System.String)">
            <summary>
            Gets a logger with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>An instance of <see cref="T:ApiJobMarket.Logging.ILog"/></returns>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.OpenNestedContext(System.String)">
            <summary>
            Opens a nested diagnostics context.
            </summary>
            <param name="message">A message.</param>
            <returns>An <see cref="T:System.IDisposable"/> that closes context when disposed.</returns>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProvider.OpenMappedContext(System.String,System.String)">
            <summary>
            Opens a mapped diagnostics context.
            </summary>
            <param name="key">A key.</param>
            <param name="value">A value.</param>
            <returns>An <see cref="T:System.IDisposable"/> that closes context when disposed.</returns>
        </member>
        <member name="T:ApiJobMarket.Logging.LogProviders.LoupeLogProvider.WriteDelegate">
            <summary>
            The form of the Loupe Log.Write method we're using
            </summary>
        </member>
        <member name="P:ApiJobMarket.Logging.LogProviders.LoupeLogProvider.ProviderIsAvailableOverride">
            <summary>
            Gets or sets a value indicating whether [provider is available override]. Used in tests.
            </summary>
            <value>
            <c>true</c> if [provider is available override]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ApiJobMarket.Logging.LogProviders.LogMessageFormatter.SimulateStructuredLogging(System.Func{System.String},System.Object[])">
            <summary>
            Some logging frameworks support structured logging, such as serilog. This will allow you to add names to structured data in a format string:
            For example: Log("Log message to {user}", user). This only works with serilog, but as the user of LibLog, you don't know if serilog is actually 
            used. So, this class simulates that. it will replace any text in {curly braces} with an index number. 
            
            "Log {message} to {user}" would turn into => "Log {0} to {1}". Then the format parameters are handled using regular .net string.Format.
            </summary>
            <param name="messageBuilder">The message builder.</param>
            <param name="formatParameters">The format parameters.</param>
            <returns></returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:ApiJobMarket.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:ApiJobMarket.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,ApiJobMarket.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,ApiJobMarket.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:ApiJobMarket.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},ApiJobMarket.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.#ctor(ApiJobMarket.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,ApiJobMarket.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:ApiJobMarket.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApiJobMarket.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApiJobMarket.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="P:ApiJobMarket.Attributes.CacheFilterAttribute.Duration">
            <summary>
            Gets or sets the cache duration in seconds. The default is 10 seconds.
            </summary>
            <value>The cache duration in seconds.</value>
        </member>
        <member name="P:ApiJobMarket.Attributes.CacheFilterAttribute.DurationAppSetingKey">
            <summary>
            Specify the duration value in configuration file
            </summary>
        </member>
        <member name="T:ApiJobMarket.Attributes.StopwatchAttribute">
            <summary>
            http://stackoverflow.com/questions/17069159/log-duration-of-an-asp-web-api-action
            http://www.rbwestmoreland.com/posts/instrumenting-asp-net-web-api/
            </summary>
        </member>
        <member name="P:ApiJobMarket.Caching.CacheProviderManager.Default">
            <summary>
            Returns the default configured data provider
            </summary>
        </member>
        <member name="P:ApiJobMarket.Caching.CacheProviderManager.Providers">
            <summary>
            .Returns the provider collection
            </summary>
        </member>
        <member name="M:ApiJobMarket.Caching.CacheProviderManager.Initialize">
            <summary>
            Reads the configuration related to the set of configured 
            providers and sets the default and collection of providers and settings.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Caching.UserCookieManager.ClearCookie(System.String)">
            <summary>
            Deletes a cookie with specified name
            </summary>
            <param name="controller">extends the controller</param>
            <param name="cookieName">cookie name</param>
        </member>
        <member name="M:ApiJobMarket.Caching.Providers.ICacheProvider.Get``1(System.String,``0@)">
            <summary>
            Retrieve cached item
            </summary>
            <typeparam name="T">Type of cached item</typeparam>
            <param name="key">Name of cached item</param>
            <param name="value">Cached value. Default(T) if
            item doesn't exist.</param>
            <returns>Cached item as type</returns>
        </member>
        <member name="M:ApiJobMarket.Caching.Providers.ICacheProvider.Set``1(System.String,``0)">
            <summary>
            Insert value into the cache using
            appropriate name/value pairs
            </summary>
            <typeparam name="T">Type of cached item</typeparam>
            <param name="value">Item to be cached</param>
            <param name="key">Name of item</param>
        </member>
        <member name="M:ApiJobMarket.Caching.Providers.ICacheProvider.Set``1(System.String,``0,System.Int32)">
            <summary>
            Insert value into the cache using
            appropriate name/value pairs WITH a cache duration set in minutes
            </summary>
            <typeparam name="T">Type of cached item</typeparam>
            <param name="key">Item to be cached</param>
            <param name="value">Name of item</param>
            <param name="duration">Cache duration in minutes</param>
        </member>
        <member name="M:ApiJobMarket.Caching.Providers.ICacheProvider.Clear(System.String)">
            <summary>
            Remove item from cache
            </summary>
            <param name="key">Name of cached item</param>        
        </member>
        <member name="M:ApiJobMarket.Caching.Providers.ICacheProvider.ClearAll(System.String)">
            <summary>
            Cleare all item matched with keyPrefix
            </summary>        
        </member>
        <member name="T:ApiJobMarket.Caching.Providers.RedisCacheProvider">
            <summary>
            Use this cache in Web environment.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Caching.Providers.RuntimeCacheProvider">
            <summary>
            Use this cache for both ASP.NET or WIN FORM Applications - Runtime caching
            </summary>
        </member>
        <member name="T:ApiJobMarket.Caching.Providers.WebCacheProvider">
            <summary>
            Use this cache in Web environment.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Controllers.ApiSavedJobController.CheckJobSaved(System.Int32,System.Int32)">
            <summary>
            Check job has has been saved or not
            </summary>
            <param name="job_id"></param>
            <param name="job_seeker_id"></param>
            <returns></returns>
        </member>
        <member name="M:ApiJobMarket.Controllers.ApiSavedJobController.Delete(System.Int32,System.Int32)">
            <summary>
            Delete job saved by job seeker
            </summary>
            <param name="job_id"></param>
            <param name="job_seeker_id"></param>
            <returns></returns>
        </member>
        <member name="T:ApiJobMarket.Controllers.BaseApiController">
            <summary>
            This class will act as a base class which other Web API controllers will inherit from, 
            for now it will contain three basic methods
            </summary>
        </member>
        <member name="M:ApiJobMarket.Extensions.DateTimeExtensions.ToEpochTime(System.DateTime)">
            <summary>
            Converts the given date value to epoch time.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Extensions.DateTimeExtensions.ToDateTimeFromEpoch(System.Int64)">
            <summary>
            Converts the given epoch time to a <see cref="T:System.DateTime"/> with <see cref="F:System.DateTimeKind.Utc"/> kind.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Extensions.ObjectExtensions.ToJson(System.Object,System.Boolean)">
            <summary>Serializes the object to a JSON string.</summary>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="T:ApiJobMarket.Extensions.OwinContextExtensions">
            <summary>
                Extension methods for OwinContext/>
            </summary>
        </member>
        <member name="M:ApiJobMarket.Extensions.OwinContextExtensions.Set``1(Microsoft.Owin.IOwinContext,``0)">
            <summary>
                Stores an object in the OwinContext using a key based on the AssemblyQualified type name
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ApiJobMarket.Extensions.OwinContextExtensions.Get``1(Microsoft.Owin.IOwinContext)">
            <summary>
                Retrieves an object from the OwinContext using a key based on the AssemblyQualified type name
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ApiJobMarket.Extensions.OwinContextExtensions.GetUserManager``1(Microsoft.Owin.IOwinContext)">
            <summary>
                Get the user manager from the context
            </summary>
            <typeparam name="TManager"></typeparam>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:ApiJobMarket.GlobalContainer">
            <summary>
            Instance of the Global Container... yes, a God class. It's the best way to do it, though.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Helpers.EpochTime">
            <summary>
            Returns the absolute DateTime or the Seconds since Unix Epoch, where Epoch is UTC 1970-01-01T0:0:0Z.
            </summary>
        </member>
        <member name="F:ApiJobMarket.Helpers.EpochTime.UnixEpoch">
            <summary>
            DateTime as UTV for UnixEpoch
            </summary>
        </member>
        <member name="M:ApiJobMarket.Helpers.EpochTime.GetIntDate(System.DateTime)">
            <summary>
            Per JWT spec:
            Gets the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the desired date/time.
            </summary>
            <param name="datetime">The DateTime to convert to seconds.</param>
            <remarks>if dateTimeUtc less than UnixEpoch, return 0</remarks>
            <returns>the number of seconds since Unix Epoch.</returns>
        </member>
        <member name="M:ApiJobMarket.Helpers.EpochTime.DateTime(System.Int64)">
            <summary>
            Creates a DateTime from epoch time.
            </summary>
            <param name="secondsSinceUnixEpoch">Number of seconds.</param>
            <returns>The DateTime in UTC.</returns>
        </member>
        <member name="T:ApiJobMarket.Helpers.DateTimeUtil">
            <summary>
            Helper class for adding DateTimes and Timespans.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Helpers.DateTimeUtil.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Add a DateTime and a TimeSpan.
            The maximum time is DateTime.MaxTime.  It is not an error if time + timespan > MaxTime.
            Just return MaxTime.
            </summary>
            <param name="time">Initial <see cref="T:System.DateTime"/> value.</param>
            <param name="timespan"><see cref="T:System.TimeSpan"/> to add.</param>
            <returns><see cref="T:System.DateTime"/> as the sum of time and timespan.</returns>
        </member>
        <member name="M:ApiJobMarket.Helpers.DateTimeUtil.GetMaxValue(System.DateTimeKind)">
            <summary>
            Gets the Maximum value for a DateTime specifying kind.
            </summary>
            <param name="kind">DateTimeKind to use.</param>
            <returns>DateTime of specified kind.</returns>
        </member>
        <member name="M:ApiJobMarket.Helpers.DateTimeUtil.GetMinValue(System.DateTimeKind)">
            <summary>
            Gets the Minimum value for a DateTime specifying kind.
            </summary>
            <param name="kind">DateTimeKind to use.</param>
            <returns>DateTime of specified kind.</returns>
        </member>
        <member name="M:ApiJobMarket.Helpers.HtmlHelpers.DescriptionFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
            <summary>
            https://gist.github.com/scottcate/4469809
            
            Usage:
            @Html.DescriptionFor(m => m.PropertyName)
            
            supply cssclass name, and override span with div tag
            @Html.DescriptionFor(m => m.PropertyName, "desc", "div")
            
            using the named param
            @Html.DescriptionFor(m => m.PropertyName, tagName: "div")
            </summary>
        </member>
        <member name="M:ApiJobMarket.Helpers.HtmlHelpers.LabelForRequired``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            http://weblogs.asp.net/gunnarpeipman/asp-net-mvc-how-to-show-asterisk-after-required-field-label
            http://cru.caes.ucdavis.edu/blog/posts/its-magic/extend-mvc-labelfor-method
            http://stackoverflow.com/questions/5940506/how-can-i-modify-labelfor-to-display-an-asterisk-on-required-fields        
            </summary>
        </member>
        <member name="T:ApiJobMarket.Helpers.Security.AuthorizationHeaderHandler">
            <summary>
            Authorization for web API class.
            </summary>
        </member>
        <member name="M:ApiJobMarket.Helpers.Security.AuthorizationHeaderHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Send method.
            </summary>
            <param name="request">Request parameter</param>
            <param name="cancellationToken">Cancellation token parameter</param>
            <returns>Return HTTP response.</returns>
        </member>
        <member name="M:ApiJobMarket.Helpers.Security.AuthorizationHeaderHandler.SetPrincipal(System.Security.Principal.IPrincipal)">
            <summary>
            Set principal method.
            </summary>
            <param name="principal">Principal parameter</param>
        </member>
        <member name="T:ApiJobMarket.HttpTracking.ContentStream">
            <summary>
            A class to wrap a stream for interception purposes
            and recording the number of bytes written to or read from
            the wrapped stream.
            </summary>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.ContentStream.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            Initialize a new instance of the <see cref="T:ApiJobMarket.HttpTracking.ContentStream"/> class.
            </summary>
            <param name="buffer"></param>
            <param name="stream"></param>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.ContentStream.ContentLength">
            <summary>
            Returns the recorded length of the underlying stream.
            </summary>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.ContentStream.ReadContentAsync(System.String,System.Int64)">
            <summary>
            Reads the content of the stream as a string.
            
            If the contentType is not specified (null) or does not
            refer to a string, this function returns the content type
            followed by the number of bytes in the response.
            
            If the contentType is one of the following values, the
            resulting content is decoded as a string and truncated to
            the maximum count specified.
            </summary>
            <param name="contentType">HTTP header content type.</param>
            <param name="maxCount">Max number of bytes returned from the stream.</param>
            <returns></returns>
        </member>
        <member name="T:ApiJobMarket.HttpTracking.HttpEntry">
            <summary>
            A simple class to hold details of an HTTP call.
            </summary>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.HttpEntry.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:ApiJobMarket.HttpTracking.HttpEntry" /> class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.TrackingId">
            <summary>
            An unique identifier for the HTTP call.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.Application">
            <summary>
            The application that made the request.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.MachineName">
            <summary>
            The machine that made the request.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.CallerIdentity">
            <summary>
            Identity of the caller.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.CallDateTime">
            <summary>
            Timestamp at which the HTTP call took place.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestVerb">
            <summary>
            Verb associated with the HTTP call.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestUri">
            <summary>
            Http request URI.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestIpAddress">
            <summary>
            Http Remote IP address
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestHeaders">
            <summary>
            Http request headers.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestLength">
            <summary>
            Http request content-length
            In the case of chunked transfer encoding,
            the request headers do not mention the content length.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestBody">
            <summary>
            Http request body, if any.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.RequestBodyOrig">
            <summary>
            Http request body original, if any.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.StatusCode">
            <summary>
            Http response status code.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.ReasonPhrase">
            <summary>
            Http response status line.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.ResponseHeaders">
            <summary>
            Http response headers.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.ResponseLength">
            <summary>
            Http response content-length
            In the case of chunked transfer encoding,
            the response headers do not mention the content length.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.ResponseBody">
            <summary>
            Http response body.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.ResponseBodyOrig">
            <summary>
            Http response body original, if any
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.CallBackTime">
            <summary>
            The http response time
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpEntry.CallDuration">
            <summary>
            Timestamp representing the duration of the HTTP call.
            </summary>
        </member>
        <member name="T:ApiJobMarket.HttpTracking.HttpTrackingMiddleware">
            <summary>
            A simple Owin Middleware to capture HTTP requests and responses
            and store details of the call into a durable store.
            </summary>
        </member>
        <member name="F:ApiJobMarket.HttpTracking.HttpTrackingMiddleware.trackingIdPropertyName_">
            <summary>
            Default value for the TrackingId response header.
            This value can be changed by specifying the TrackingIdPropertyName
            in the <see cref="T:ApiJobMarket.HttpTracking.HttpTrackingOptions"/> class passed to the ctor.
            </summary>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.HttpTrackingMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,ApiJobMarket.HttpTracking.HttpTrackingOptions)">
            <summary>
            Initialize a new instance of the <see cref="T:ApiJobMarket.HttpTracking.HttpTrackingMiddleware"/> class.
            </summary>
            <param name="next">A reference to the next OwinMiddleware object in the chain.</param>
            <param name="options">A reference to an <see cref="T:ApiJobMarket.HttpTracking.HttpTrackingOptions"/> class.</param>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.HttpTrackingMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Processes the incoming HTTP call and capture details about
            the request, the response, the identity of the caller and the
            call duration to persistent storage.
            </summary>
            <param name="context">A reference to the Owin context.</param>
            <returns />
        </member>
        <member name="T:ApiJobMarket.HttpTracking.HttpTrackingOptions">
            <summary>
            Options for configuring the <see cref="T:ApiJobMarket.HttpTracking.HttpTrackingMiddleware"/> class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpTrackingOptions.TrackingStore">
            <summary>
            Interface to an implementation of a durable store for tracking calls.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpTrackingOptions.TrackingIdPropertyName">
            <summary>
            Name of the HTTP response header property holding the tracking identifier.
            By default, the name of this property is "http-tracking-id"
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpTrackingOptions.MaximumRecordedRequestLength">
            <summary>
            The maximum number of bytes from the request to persist to durable storage.
            </summary>
        </member>
        <member name="P:ApiJobMarket.HttpTracking.HttpTrackingOptions.MaximumRecordedResponseLength">
            <summary>
            The maximum number of bytes from the response to persist to durable storage.
            </summary>
        </member>
        <member name="T:ApiJobMarket.HttpTracking.HttpTrackingStore">
            <summary>
            Dummy implementation of the <see cref="T:ApiJobMarket.HttpTracking.HttpEntry"/> interface to file, for illustration purposes.
            </summary>
        </member>
        <member name="T:ApiJobMarket.HttpTracking.IHttpTrackingStore">
            <summary>
            Interface for tracking details about HTTP calls.
            </summary>
        </member>
        <member name="M:ApiJobMarket.HttpTracking.IHttpTrackingStore.InsertRecordAsync(ApiJobMarket.HttpTracking.HttpEntry)">
            <summary>
            Persist details of an HTTP call into durable storage.
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="P:ApiJobMarket.Models.ApiRegisterModel.Password">
            <summary>
            Password in MD5 encrypted
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiRegisterModel.Time">
            <summary>
            Calling API time format: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePasswordModel.OldPwd1">
            <summary>
            Password in MD5 encrypted
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePasswordModel.OldPwd2">
            <summary>
            Password in MD5 encrypted
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePasswordModel.Time">
            <summary>
            Calling API time format: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiUpdateProfileModel.Time">
            <summary>
            Calling API time format: yyyyMMddHHmmss
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ApiJobMarket.Models.ApiRecoverPasswordModel.Hash" -->
        <member name="P:ApiJobMarket.Models.ApiCheckUserTokenModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiCheckUserTokenModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiAuthLoginModel.Password">
            <summary>
            Password in MD5 encrypted
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiAuthLoginModel.Time">
            <summary>
            Login time format: yyyyMMddHHmmss
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ApiJobMarket.Models.ApiAuthLoginModel.Hash" -->
        <member name="P:ApiJobMarket.Models.ApiAuthLoginModel.SocialProvider">
            <summary>
            Social is string
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiAuthLoginWithModel.SocialProvider">
            <summary>
            Social is string
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.RefreshTokenModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.RefreshTokenModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.LogoutModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.LogoutModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiCheckUserExistsModel.UserName">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiCheckUserExistsModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiGetUserInfoModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiGetUserInfoModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiGetUserByEmailModel.Email">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePassword1Model.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePassword1Model.NewPassword">
            <summary>
            NewPassword
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePassword2Model.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiChangePassword2Model.PasswordType">
            <summary>
            PasswordType
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiCheckPwd2IsValidModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiCheckPwd2IsValidModel.Time">
            <summary>
            The time when calling api: yyyyMMddHHmmss
            </summary>
        </member>
        <member name="P:ApiJobMarket.Models.ApiListUserInfoModel.ListUserId">
            <summary>
            ListUserId
            </summary>
        </member>
        <member name="T:ApiJobMarket.Owin.Middlewares.LoggerMiddleware">
            <summary>
            To wire this up we have to register the middleware and its dependencies with the container, 
            and then enable the middleware dependency injection support via a call to UseAutofacMiddleware. 
            This call should be the first piece of middleware registered with the IAppBuilder
            </summary>
        </member>
        <member name="T:ApiJobMarket.Resources.EmailResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.ERROR_SENDING_EMAIL_FAILED">
            <summary>
              Looks up a localized string similar to Email sending failed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.NOTIF_EMAIL_SENT_FORMAT">
            <summary>
              Looks up a localized string similar to An email has been sent to your email [{0}]. Please verify the link on that email.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.SUBJECT_RECOVER_PASSWORD">
            <summary>
              Looks up a localized string similar to Recover password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.EmailResource.SUBJECT_VERIVY_REGISTER">
            <summary>
              Looks up a localized string similar to Registration verify.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Resources.UserWebResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_CHANGEPWD_SUCCESS">
            <summary>
              Looks up a localized string similar to Password is changed successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_AUTH_METHOD_SELECTED">
            <summary>
              Looks up a localized string similar to You already used this method .
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_CAPTCHA_INVALID">
            <summary>
              Looks up a localized string similar to You entered the invalid captcha.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_CONFIRMPWD_INCORRECT">
            <summary>
              Looks up a localized string similar to Confirm password doesn&apos;t match. Type again.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_DATA_INVALID">
            <summary>
              Looks up a localized string similar to The data is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_EMAIL_INVALID">
            <summary>
              Looks up a localized string similar to Your email is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_EMAIL_NULL">
            <summary>
              Looks up a localized string similar to Email could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_EXTERNALSERVICE_TIMEOUT">
            <summary>
              Looks up a localized string similar to Service is busy. Please try again later..
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_HASH_INCORRECT">
            <summary>
              Looks up a localized string similar to Your encryption string (Hashing) is incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_HASH_NULL">
            <summary>
              Looks up a localized string similar to Hash data could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_INFO_NOTFOUND">
            <summary>
              Looks up a localized string similar to The information not found.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_LESS_6_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be less than 6 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_OLDPWD_EQUAL_NEWPWD">
            <summary>
              Looks up a localized string similar to The new password matches with the old password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_OLDPWD1_NOTCORRECT">
            <summary>
              Looks up a localized string similar to Your old password 1 is not correct.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_OLDPWD2_NOTCORRECT">
            <summary>
              Looks up a localized string similar to Your old password 2 is not correct.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_OVER_1000_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be more than 1000 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_OVER_50_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be more than 50 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_PASSWORD_NULL">
            <summary>
              Looks up a localized string similar to Please fill in your password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_PHONE_INVALID">
            <summary>
              Looks up a localized string similar to Your phone is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_PHONENUMBER_NULL">
            <summary>
              Looks up a localized string similar to Phone could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_RECOVER_METHOD_NULL">
            <summary>
              Looks up a localized string similar to The recovery method could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_TIME_INVALID">
            <summary>
              Looks up a localized string similar to Your Time is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_TIME_NULL">
            <summary>
              Looks up a localized string similar to Time could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_TOKEN_NULL">
            <summary>
              Looks up a localized string similar to TokenKey could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_UPLOAD_FILES">
            <summary>
              Looks up a localized string similar to An error has been occurred when trying to upload files.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_USERID_NULL">
            <summary>
              Looks up a localized string similar to UserId could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_USERNAME_NULL">
            <summary>
              Looks up a localized string similar to Please fill in your username.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_ERROR_USERTOKEN_NOTFOUND">
            <summary>
              Looks up a localized string similar to User doesn&apos;t exists or tokenkey is incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_EXCEPTION_NOTIF">
            <summary>
              Looks up a localized string similar to System is busy now. Please try again later.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_OTPCODE_FORMAT">
            <summary>
              Looks up a localized string similar to Your OTP code is {0}.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_SUCCESS_CHANGEPWD2">
            <summary>
              Looks up a localized string similar to Your password2 has been changed successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.COMMON_SUCCESS_OTPCODE_SENT">
            <summary>
              Looks up a localized string similar to A new OTP code has sent to your phone. Please verify this code..
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.LOGIN_ERROR_INFO_INVALID">
            <summary>
              Looks up a localized string similar to Your Username or Password are incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.LOGIN_ERROR_TIME_INVALID">
            <summary>
              Looks up a localized string similar to Your Time is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.LOGIN_FAILED">
            <summary>
              Looks up a localized string similar to Login failed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.LOGIN_SUCCESS">
            <summary>
              Looks up a localized string similar to Login successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.OTP_ERROR_OTPCODE_EXPIRED">
            <summary>
              Looks up a localized string similar to The OTPCode has been expired.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.OTP_ERROR_OTPCODE_NOTEXISTS_ORUSED">
            <summary>
              Looks up a localized string similar to OTPCode is not exists or already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.OTP_SUCCESS_CREATE">
            <summary>
              Looks up a localized string similar to Created new OTP successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.OTP_SUCCESS_VERIFY">
            <summary>
              Looks up a localized string similar to OTPCode was verified successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_ERROR_BIRTHDAY_INVALID">
            <summary>
              Looks up a localized string similar to Birthday format is not correct. The correct format is: dd/mm/yyyy.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_ERROR_EMAIL_USED">
            <summary>
              Looks up a localized string similar to Email already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_ERROR_IDCARD_USED">
            <summary>
              Looks up a localized string similar to IDCard already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_ERROR_PHONE_USED">
            <summary>
              Looks up a localized string similar to PhoneNumber already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_ERROR_USERNAME_USED">
            <summary>
              Looks up a localized string similar to UserName already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.REGISTER_SUCCESS">
            <summary>
              Looks up a localized string similar to Register successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_ACCOUNT">
            <summary>
              Looks up a localized string similar to Account.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_ALREADY_HAVE_ACC">
            <summary>
              Looks up a localized string similar to Already have account?.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_CANCEL_BUTTON">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_CAPTCHA_NULL">
            <summary>
              Looks up a localized string similar to Please input the captcha.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_CLICK">
            <summary>
              Looks up a localized string similar to Click.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_CONFIRM_PASSWORD">
            <summary>
              Looks up a localized string similar to Confirm password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_CROP_AVATAR_BUTTON">
            <summary>
              Looks up a localized string similar to Crop Avatar.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_DONT_HAVE_ACC">
            <summary>
              Looks up a localized string similar to Don&apos;t have account?.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_EMAIL">
            <summary>
              Looks up a localized string similar to Email.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_HELP">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_LANGUAGE">
            <summary>
              Looks up a localized string similar to Languages.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_LOGIN">
            <summary>
              Looks up a localized string similar to Login.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_LOGIN_ACCOUNT">
            <summary>
              Looks up a localized string similar to Email, username, phone.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_LOGIN_BUTTON">
            <summary>
              Looks up a localized string similar to Login.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_MAXIMUM_SIZE">
            <summary>
              Looks up a localized string similar to Maximum Size.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_PASSWORD">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_PHONE">
            <summary>
              Looks up a localized string similar to Phone.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_READ_ALLOW">
            <summary>
              Looks up a localized string similar to I have read and agree to.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_REFRESH_CAPTCHA_BUTTON">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_REFRESH_CAPTCHA_DESC">
            <summary>
              Looks up a localized string similar to Enter the text you see above.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_REGISTER">
            <summary>
              Looks up a localized string similar to Register.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_REMEMBER_ME">
            <summary>
              Looks up a localized string similar to Always stay signed in.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_SUBMIT_BUTTON">
            <summary>
              Looks up a localized string similar to Submit.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_TERM_CONDITION">
            <summary>
              Looks up a localized string similar to Terms and Conditions.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.TEXT_TO">
            <summary>
              Looks up a localized string similar to to.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserWebResource.UPDATE_PROFILE_SUCCESS">
            <summary>
              Looks up a localized string similar to Profile updated successfully.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Resources.UserApiResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.APPLICATION_STATUS_ACTIVE">
            <summary>
              Looks up a localized string similar to Applied.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.APPLICATION_STATUS_CANCEL">
            <summary>
              Looks up a localized string similar to Cancelled.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.APPLICATION_STATUS_IGNORE">
            <summary>
              Looks up a localized string similar to Ignore.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.APPLICATION_STATUS_INTERVIEW">
            <summary>
              Looks up a localized string similar to Waiting for the interview.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_AUTH_SUCCESS">
            <summary>
              Looks up a localized string similar to Authenticate successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_CHANGEPWD_SUCCESS">
            <summary>
              Looks up a localized string similar to Password is changed successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_CONFIRMPWD_INCORRECT">
            <summary>
              Looks up a localized string similar to Confirm password doesn&apos;t match. Type again.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_EMAIL_NULL">
            <summary>
              Looks up a localized string similar to Email could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_HASH_INCORRECT">
            <summary>
              Looks up a localized string similar to Your HashingData is incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_HASH_NULL">
            <summary>
              Looks up a localized string similar to Hash data could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_INACTIVE_ACCOUNT">
            <summary>
              Looks up a localized string similar to Your account hasn&apos;t been activated.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_INPUT_DATA_NULL">
            <summary>
              Looks up a localized string similar to The input data could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_LESS_6_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be less than 6 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_LIMIT_PAGE_INDEX">
            <summary>
              Looks up a localized string similar to The page index must between 1-50.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_LIMIT_PAGE_SIZE">
            <summary>
              Looks up a localized string similar to The page size must between 1-50.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_NULL_VALUE">
            <summary>
              Looks up a localized string similar to is required.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_NUMBER_INT">
            <summary>
              Looks up a localized string similar to Please enter valid integer Number.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OLDPWD_EQUAL_NEWPWD">
            <summary>
              Looks up a localized string similar to The new password matches with the old password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OLDPWD1_NOTCORRECT">
            <summary>
              Looks up a localized string similar to Your old password 1 is not correct.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OLDPWD2_NOTCORRECT">
            <summary>
              Looks up a localized string similar to Your old password 2 is not correct.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OTPACTION_NULL">
            <summary>
              Looks up a localized string similar to OTPAction could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OTPCODE_NULL">
            <summary>
              Looks up a localized string similar to OTPCode could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OTPTYPE_INVALID">
            <summary>
              Looks up a localized string similar to OTPType is ivalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OTPTYPE_NULL">
            <summary>
              Looks up a localized string similar to OTPType  could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OVER_1000_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be more than 1000 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_OVER_50_CHARACTERS">
            <summary>
              Looks up a localized string similar to This field could not be more than 50 characters.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_PASSWORD_NULL">
            <summary>
              Looks up a localized string similar to Password could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_PHONE_INVALID">
            <summary>
              Looks up a localized string similar to Your phone is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_PHONENUMBER_NULL">
            <summary>
              Looks up a localized string similar to Phone could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_POST_ACTION_NOTFOUND">
            <summary>
              Looks up a localized string similar to Not found post action.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_PWDTYPE_INVALID">
            <summary>
              Looks up a localized string similar to Your PwdType is invalid. Correct value are: &apos;level1&apos; or &apos;level2&apos;.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_PWDTYPE_NULL">
            <summary>
              Looks up a localized string similar to PasswordType could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_RECOVERPWD_METHOD_INVALID">
            <summary>
              Looks up a localized string similar to The recover password method is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_SYSTEM">
            <summary>
              Looks up a localized string similar to System is busy now. Please try again later..
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_TIME_INVALID">
            <summary>
              Looks up a localized string similar to Your Time is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_TIME_NULL">
            <summary>
              Looks up a localized string similar to Time could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_TOKEN_INVALID">
            <summary>
              Looks up a localized string similar to Your token is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_TOKEN_NULL">
            <summary>
              Looks up a localized string similar to TokenKey could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_UPLOAD_FILES">
            <summary>
              Looks up a localized string similar to An error has been occurred when trying to upload files.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_USERID_NULL">
            <summary>
              Looks up a localized string similar to UserId could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_USERNAME_NULL">
            <summary>
              Looks up a localized string similar to Username could not be null.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_ERROR_USERTOKEN_NOTFOUND">
            <summary>
              Looks up a localized string similar to The session has expired. Please sign in and try again.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_INFO_NOTFOUND">
            <summary>
              Looks up a localized string similar to The info was not found.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_OTPCODE_FORMAT">
            <summary>
              Looks up a localized string similar to [Halo] Your OTP code is {0}.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_SUCCESS">
            <summary>
              Looks up a localized string similar to Success.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_SUCCESS_CHANGEPWD2">
            <summary>
              Looks up a localized string similar to Your password2 has been changed successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_SUCCESS_OTPCODE_SENT">
            <summary>
              Looks up a localized string similar to A new OTP code has sent to your phone [{0}]. Please verify this code..
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_USERNAME_EXISTED">
            <summary>
              Looks up a localized string similar to UserName existed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.COMMON_USERNAME_NOT_EXISTED">
            <summary>
              Looks up a localized string similar to UserName not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.DELETE_SUCCESS">
            <summary>
              Looks up a localized string similar to Deleted successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000101">
            <summary>
              Looks up a localized string similar to Error when connect to server.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000102">
            <summary>
              Looks up a localized string similar to Internal server error.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000103">
            <summary>
              Looks up a localized string similar to Token invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000104">
            <summary>
              Looks up a localized string similar to No permission.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000105">
            <summary>
              Looks up a localized string similar to User not found.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000106">
            <summary>
              Looks up a localized string similar to Unsuccessfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000107">
            <summary>
              Looks up a localized string similar to Bad request.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000108">
            <summary>
              Looks up a localized string similar to Foreign key does not exist.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000109">
            <summary>
              Looks up a localized string similar to Wrong data type or range.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000110">
            <summary>
              Looks up a localized string similar to Lack of searching conditions.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000111">
            <summary>
              Looks up a localized string similar to Lack of data fields.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E000112">
            <summary>
              Looks up a localized string similar to This data does not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010101">
            <summary>
              Looks up a localized string similar to Wrong email or password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010102">
            <summary>
              Looks up a localized string similar to Account is not active.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010103">
            <summary>
              Looks up a localized string similar to Do not have admin pemission for login.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010104">
            <summary>
              Looks up a localized string similar to Do not have permission to access email of Facebook account.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010105">
            <summary>
              Looks up a localized string similar to Do not have permission to access email of Google account.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010201">
            <summary>
              Looks up a localized string similar to Wrong email format.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010202">
            <summary>
              Looks up a localized string similar to Email already existed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010203">
            <summary>
              Looks up a localized string similar to Could not send activation email.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010301">
            <summary>
              Looks up a localized string similar to Incorrect authentication code please check the link.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010302">
            <summary>
              Looks up a localized string similar to This account already activated.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010303">
            <summary>
              Looks up a localized string similar to Your account has been successfully activated. Please log in again on the app.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010401">
            <summary>
              Looks up a localized string similar to You have already changed your password.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010402">
            <summary>
              Looks up a localized string similar to Incorrect authentication code please check the link.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010403">
            <summary>
              Looks up a localized string similar to Confirmed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010501">
            <summary>
              Looks up a localized string similar to This account is not exist.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010502">
            <summary>
              Looks up a localized string similar to This account has not been activated yet.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010503">
            <summary>
              Looks up a localized string similar to Error sending email.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010504">
            <summary>
              Looks up a localized string similar to Email was sent successfully please check your mailbox again.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010601">
            <summary>
              Looks up a localized string similar to Email format is incorrect, please check again.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E010602">
            <summary>
              Looks up a localized string similar to Authentication was sent, please check your mailbox.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E020101">
            <summary>
              Looks up a localized string similar to Description already existed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E030101">
            <summary>
              Looks up a localized string similar to This CV is not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E030102">
            <summary>
              Looks up a localized string similar to code_id already existed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E030103">
            <summary>
              Looks up a localized string similar to code_id has been saved.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E030104">
            <summary>
              Looks up a localized string similar to code_id is not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E030105">
            <summary>
              Looks up a localized string similar to Image file size does not exceed 50MB.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E040101">
            <summary>
              Looks up a localized string similar to Wrong user_id or work_status.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E050101">
            <summary>
              Looks up a localized string similar to This job is not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E050102">
            <summary>
              Looks up a localized string similar to This job already applied.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E050103">
            <summary>
              Looks up a localized string similar to This job already saved.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_E060101">
            <summary>
              Looks up a localized string similar to This company is not exists.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_FIELD_NOT_NULL_REQUIRED">
            <summary>
              Looks up a localized string similar to This field is required.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.ERROR_PWD2_INCORRECT">
            <summary>
              Looks up a localized string similar to Password2 is incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.JOB_STATUS_CLOSED">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.JOB_STATUS_DRAFT">
            <summary>
              Looks up a localized string similar to Draft.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.JOB_STATUS_PUBLISHED">
            <summary>
              Looks up a localized string similar to Published.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.LOGIN_ERROR_INFO_INVALID">
            <summary>
              Looks up a localized string similar to Your Username or Password are incorrect.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.LOGIN_ERROR_TIME_INVALID">
            <summary>
              Looks up a localized string similar to Your Time is invalid.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.LOGIN_FAILED">
            <summary>
              Looks up a localized string similar to Login failed.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.LOGIN_SUCCESS">
            <summary>
              Looks up a localized string similar to Login successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.NOTIF_COMMENT">
            <summary>
              Looks up a localized string similar to {0} commented on post.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.NOTIF_LIKE">
            <summary>
              Looks up a localized string similar to {0} liked your post.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.OTP_ERROR_OTPCODE_EXPIRED">
            <summary>
              Looks up a localized string similar to The OTPCode has been expired.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.OTP_ERROR_OTPCODE_NOTEXISTS_ORUSED">
            <summary>
              Looks up a localized string similar to OTPCode is not exists or already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.OTP_SUCCESS_CREATE">
            <summary>
              Looks up a localized string similar to Created new OTP successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.OTP_SUCCESS_VERIFY">
            <summary>
              Looks up a localized string similar to OTPCode was verified successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REFRESHTOKEN_ERROR">
            <summary>
              Looks up a localized string similar to Renewal TokenKey error.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REFRESHTOKEN_SUCCESS">
            <summary>
              Looks up a localized string similar to Renewal token key successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_ERROR_BIRTHDAY_INVALID">
            <summary>
              Looks up a localized string similar to Birhday format is not correct. The correct format is: dd/mm/yyyy.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_ERROR_EMAIL_USED">
            <summary>
              Looks up a localized string similar to Email already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_ERROR_IDCARD_USED">
            <summary>
              Looks up a localized string similar to IDCard already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_ERROR_PHONE_USED">
            <summary>
              Looks up a localized string similar to PhoneNumber already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_ERROR_USERNAME_USED">
            <summary>
              Looks up a localized string similar to UserName already used.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.REGISTER_SUCCESS">
            <summary>
              Looks up a localized string similar to Register successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_APPLICATION_ACCEPT_INTERVIEW">
            <summary>
              Looks up a localized string similar to Application accepted to interview successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_APPLICATION_IGNORED">
            <summary>
              Looks up a localized string similar to Application has been ignored.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_JOB_APPLY">
            <summary>
              Looks up a localized string similar to Job applied successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_JOB_CANCEL">
            <summary>
              Looks up a localized string similar to Job cancelled successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_JOB_SAVE">
            <summary>
              Looks up a localized string similar to Job saved successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.SUCCESS_PWD2_CORRECT">
            <summary>
              Looks up a localized string similar to Password2 is correct.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.UPDATE_INFO_SUCCESS">
            <summary>
              Looks up a localized string similar to Info updated successfully.
            </summary>
        </member>
        <member name="P:ApiJobMarket.Resources.UserApiResource.UPDATE_PROFILE_SUCCESS">
            <summary>
              Looks up a localized string similar to Profile updated successfully.
            </summary>
        </member>
        <member name="T:ApiJobMarket.Services.ServiceBase">
            <summary>
            This base class helps Autofac module will automatically be injected into container
            </summary>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Newtonsoft.CachedObject`1">
            <summary>
            This class is used a wrapper for serialized content.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.CachedObject`1.#ctor(`0)">
            <summary>
            Constructor for CacheObject wraper
            </summary>
            <param name="cachedValue">The cache value</param>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Newtonsoft.CachedObject`1.CachedValue">
            <summary>
            The cache content
            </summary>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer">
            <summary>
            JSon.Net implementation of <see cref="T:StackExchange.Redis.Extensions.Core.ISerializer"/>
            </summary>
        </member>
        <member name="F:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.encoding">
            <summary>
            Encoding to use to convert string to byte[] and the other way around.
            </summary>
            <remarks>
            StackExchange.Redis uses Encoding.UTF8 to convert strings to bytes,
            hence we do same here.
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.SerializeAsync(System.Object)">
            <summary>
            Serializes the asynchronous.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified serialized object.
            </summary>
            <param name="serializedObject">The serialized object.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.DeserializeAsync(System.Byte[])">
            <summary>
            Deserializes the asynchronous.
            </summary>
            <param name="serializedObject">The serialized object.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.Deserialize``1(System.Byte[])">
            <summary>
            Deserializes the specified serialized object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedObject">The serialized object.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Newtonsoft.NewtonsoftSerializer.DeserializeAsync``1(System.Byte[])">
            <summary>
            Deserializes the asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedObject">The serialized object.</param>
            <returns></returns>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration">
            <summary>
            Handle Redis Configuration
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.RedisHosts">
            <summary>
            The host of Redis Server
            </summary>
            <value>
            The ip or name
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.AllowAdmin">
            <summary>
            Specify if the connection can use Admin commands like flush database
            </summary>
            <value>
              <c>true</c> if can use admin commands; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.Ssl">
            <summary>
            Specify if the connection is a secure connection or not.
            </summary>
            <value>
              <c>true</c> if is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.ConnectTimeout">
            <summary>
            The connection timeout
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.Database">
            <summary>
            Database Id
            </summary>
            <value>
            The database id, the default value is 0
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration.Password">
            <summary>
            The password or access key
            </summary>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler">
            <summary>
            The implementation of <see cref="T:StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration"/>
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.RedisHosts">
            <summary>
            The host of Redis Server
            </summary>
            <value>
            The ip or name
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.AllowAdmin">
            <summary>
            Specify if the connection can use Admin commands like flush database
            </summary>
            <value>
              <c>true</c> if can use admin commands; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.Ssl">
            <summary>
            Specify if the connection is a secure connection or not.
            </summary>
            <value>
              <c>true</c> if is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.ConnectTimeout">
            <summary>
            The connection timeout
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.Database">
            <summary>
            Database Id
            </summary>
            <value>
            The database id, the default value is 0
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.Password">
            <summary>
            The password or access key
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.Configuration.RedisCachingSectionHandler.GetConfig">
            <summary>
            Gets the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.Configuration.RedisHost">
            <summary>
            Configuration element for Redis Host
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisHost.Host">
            <summary>
            Gets the Redis host.
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisHost.CachePort">
            <summary>
            Gets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.Configuration.RedisHostCollection">
            <summary>
            Configuration Element Collection for <see cref="T:StackExchange.Redis.Extensions.Core.Configuration.RedisHost"/>
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.Configuration.RedisHostCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:StackExchange.Redis.Extensions.Core.Configuration.RedisHost"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:StackExchange.Redis.Extensions.Core.Configuration.RedisHost"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.Configuration.RedisHostCollection.CreateNewElement">
            <summary>
            Creates the new element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.Configuration.RedisHostCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.Extensions.LinqExtensions">
            <summary>
            	Adds behavior to System.Linq.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.Extensions.LinqExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            	Eaches the specified enumeration.
            </summary>
            <typeparam name = "T"></typeparam>
            <param name = "source">The enumeration.</param>
            <param name = "action">The action.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.Extensions.LinqExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Fors the each asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="body">The body.</param>
            <returns></returns>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.ICacheClient">
            <summary>
            Contrac for ICache implementation
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.ICacheClient.Database">
            <summary>
            Return the instance of <see cref="T:StackExchange.Redis.IDatabase"/> used be ICacheClient implementation
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.ICacheClient.Serializer">
            <summary>
            Return the instance of <see cref="T:StackExchange.Redis.Extensions.Core.ISerializer"/>
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Exists(System.String)">
            <summary>
            Verify that the specified cache key exists
            </summary>
            <param name="key">The cache key.</param>
            <returns>True if the key is present into Redis. Othwerwise False</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ExistsAsync(System.String)">
            <summary>
            Verify that the specified cache key exists
            </summary>
            <param name="key">The cache key.</param>
            <returns>True if the key is present into Redis. Othwerwise False</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Remove(System.String)">
            <summary>
            Removes the specified key from Redis Database
            </summary>
            <param name="key">The key.</param>
            <returns>True if the key has removed. Othwerwise False</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.RemoveAsync(System.String)">
            <summary>
            Removes the specified key from Redis Database
            </summary>
            <param name="key">The key.</param>
            <returns>True if the key has removed. Othwerwise False</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes all specified keys from Redis Database
            </summary>
            <param name="keys">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes all specified keys from Redis Database
            </summary>
            <param name="keys">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Get``1(System.String)">
            <summary>
            Get the object with the specified key from Redis database
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="key">The cache key.</param>
            <returns>Null if not present, otherwise the instance of T.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.GetAsync``1(System.String)">
            <summary>
            Get the object with the specified key from Redis database
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="key">The cache key.</param>
            <returns>Null if not present, otherwise the instance of T.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Add``1(System.String,``0)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <returns>True if the object has been added. Otherwise false</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.AddAsync``1(System.String,``0)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <returns>True if the object has been added. Otherwise false</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Replace``1(System.String,``0)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ReplaceAsync``1(System.String,``0)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Add``1(System.String,``0,System.DateTimeOffset)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.AddAsync``1(System.String,``0,System.DateTimeOffset)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Replace``1(System.String,``0,System.DateTimeOffset)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ReplaceAsync``1(System.String,``0,System.DateTimeOffset)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Add``1(System.String,``0,System.TimeSpan)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.AddAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
            Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Replace``1(System.String,``0,System.TimeSpan)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ReplaceAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
            Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
            True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.GetAll``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get the objects with the specified keys from Redis database with one roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="keys">The keys.</param>
            <returns>
            Empty list if there are no results, otherwise the instance of T.
            If a cache key is not present on Redis the specified object into the returned Dictionary will be null
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.GetAllAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get the objects with the specified keys from Redis database with a single roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="keys">The keys.</param>
            <returns>
            Empty list if there are no results, otherwise the instance of T.
            If a cache key is not present on Redis the specified object into the returned Dictionary will be null
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.AddAll``1(System.Collections.Generic.IList{System.Tuple{System.String,``0}})">
            <summary>
            Add the objects with the specified keys to Redis database with a single roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="items">The items.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.AddAllAsync``1(System.Collections.Generic.IList{System.Tuple{System.String,``0}})">
            <summary>
            Add the objects with the specified keys to Redis database with a single roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="items">The items.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetAdd(System.String,System.String)">
            <summary>
            Run SADD command see http://redis.io/commands/sadd
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetAddAsync(System.String,System.String)">
            <summary>
            Run SADD command see http://redis.io/commands/sadd
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetAdd``1(System.String,``0)">
            <summary>
            Run SADD command http://redis.io/commands/sadd
            </summary>
            <param name="item">Name of the member.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetAddAsync``1(System.String,``0)">
            <summary>
            Run SADD command http://redis.io/commands/sadd
            </summary>
            <param name="item">Name of the member.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetMember(System.String)">
            <summary>
            Run SMEMBERS command http://redis.io/commands/SMEMBERS
            </summary>
            <param name="memberName">Name of the member.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetMemberAsync(System.String)">
            <summary>
            Run SMEMBERS command see http://redis.io/commands/SMEMBERS
            </summary>
            <param name="memberName">Name of the member.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SetMembersAsync``1(System.String)">
            <summary>
                Run SMEMBERS command see http://redis.io/commands/SMEMBERS
                Deserializes the results to T
            </summary>
            <typeparam name="T">The type of the expected objects in the set</typeparam>
            <param name="key">The key</param>
            <returns>An array of objects in the set</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SearchKeys(System.String)">
            <summary>
            Searches the keys from Redis database
            </summary>
            <remarks>
            Consider this as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases
            </remarks>
            <param name="pattern">The pattern.</param>
            <example>
            	if you want to return all keys that start with "myCacheKey" uses "myCacheKey*"
            	if you want to return all keys that contain with "myCacheKey" uses "*myCacheKey*"
            	if you want to return all keys that end with "myCacheKey" uses "*myCacheKey"
            </example>
            <returns>A list of cache keys retrieved from Redis database</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SearchKeysAsync(System.String)">
            <summary>
            Searches the keys from Redis database
            </summary>
            <remarks>
            Consider this as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases
            </remarks>
            <param name="pattern">The pattern.</param>
            <example>
            	if you want to return all keys that start with "myCacheKey" uses "myCacheKey*"
            	if you want to return all keys that contain with "myCacheKey" uses "*myCacheKey*"
            	if you want to return all keys that end with "myCacheKey" uses "*myCacheKey"
            </example>
            <returns>A list of cache keys retrieved from Redis database</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.FlushDb">
            <summary>
            Flushes the database.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.FlushDbAsync">
            <summary>
            Flushes the database asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Save(StackExchange.Redis.SaveType)">
            <summary>
            Save the DB in background.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SaveAsync(StackExchange.Redis.SaveType)">
            <summary>
            Save the DB in background asynchronous.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.GetInfo">
            <summary>
            Gets the information about redis.
            More info see http://redis.io/commands/INFO
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.GetInfoAsync">
            <summary>
            Gets the information about redis.
            More info see http://redis.io/commands/INFO
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Publish``1(StackExchange.Redis.RedisChannel,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            Publishes a message to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.PublishAsync``1(StackExchange.Redis.RedisChannel,``0,StackExchange.Redis.CommandFlags)">
            <summary>
            Publishes a message to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Subscribe``1(StackExchange.Redis.RedisChannel,System.Action{``0},StackExchange.Redis.CommandFlags)">
            <summary>
            Registers a callback handler to process messages published to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.SubscribeAsync``1(StackExchange.Redis.RedisChannel,System.Func{``0,System.Threading.Tasks.Task},StackExchange.Redis.CommandFlags)">
            <summary>
            Registers a callback handler to process messages published to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.Unsubscribe``1(StackExchange.Redis.RedisChannel,System.Action{``0},StackExchange.Redis.CommandFlags)">
            <summary>
            Unregisters a callback handler to process messages published to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.UnsubscribeAsync``1(StackExchange.Redis.RedisChannel,System.Func{``0,System.Threading.Tasks.Task},StackExchange.Redis.CommandFlags)">
            <summary>
            Unregisters a callback handler to process messages published to a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.UnsubscribeAll(StackExchange.Redis.CommandFlags)">
            <summary>
            Unregisters all callback handlers on a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.UnsubscribeAllAsync(StackExchange.Redis.CommandFlags)">
            <summary>
            Unregisters all callback handlers on a channel.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ListAddToLeft``1(System.String,``0)">
            <summary>
            Insert the specified value at the head of the list stored at key. If key does not exist, it is created as empty list before performing the push operations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns>
            the length of the list after the push operations.
            </returns>
            <remarks>
            http://redis.io/commands/lpush
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ListAddToLeftAsync``1(System.String,``0)">
            <summary>
            Lists the add to left asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ListGetFromRight``1(System.String)">
            <summary>
            Removes and returns the last element of the list stored at key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
            <remarks>
            http://redis.io/commands/rpop
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.ListGetFromRightAsync``1(System.String)">
            <summary>
            Removes and returns the last element of the list stored at key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
            <remarks>
            http://redis.io/commands/rpop
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashDelete(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                If key is deleted returns true.
                If key does not exist, it is treated as an empty hash and this command returns false.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashDelete(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
                If key does not exist, it is treated as an empty hash and this command returns 0.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields to be removed.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="keys"></param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Tthe number of fields that were removed from the hash, not including specified but non existing fields.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashExists(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns if field is an existing field in the hash stored at key.
            </summary>
            
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Returns if field is an existing field in the hash stored at key.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGet``1(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the value associated with field in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value associated with field, or nil when field is not present in the hash or key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGet``1(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the values associated with the specified fields in the hash stored at key.
                For every field that does not exist in the hash, a nil value is returned. 
                Because a non-existing keys are treated as empty hashes, running HMGET against a non-existing key will return a list of nil values.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being requested.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="keys"></param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values associated with the given fields, in the same order as they are requested.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGetAll``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all fields and values of the hash stored at key. In the returned value, every field name is followed by its value, so the length of the reply is twice the size of the hash.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields and their values stored in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashIncerementBy(System.String,System.String,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
                Increments the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. 
                If field does not exist the value is set to 0 before the operation is performed.
                The range of values supported by HINCRBY is limited to 64 bit signed integers.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashIncerementBy(System.String,System.String,System.Double,StackExchange.Redis.CommandFlags)">
            <summary>
                Increment the specified field of an hash stored at key, and representing a floating point number, by the specified increment. 
                If the field does not exist, it is set to 0 before performing the operation.
            </summary>
            <remarks>
                <para>
                    An error is returned if one of the following conditions occur:
                    * The field contains a value of the wrong type (not a string).
                    * The current field content or the specified increment are not parsable as a double precision floating point number.
                </para>
                <para>
                    Time complexity: O(1)
                </para>
                
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashKeys(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all field names in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashLength(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the number of fields contained in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>number of fields in the hash, or 0 when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashSet``1(System.String,System.String,``0,System.Boolean,StackExchange.Redis.CommandFlags)">
            <summary>
                Sets field in the hash stored at key to value. If key does not exist, a new key holding a hash is created. If field already exists in the hash, it is overwritten.
            </summary>
            
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="nx">Behave like hsetnx - set only if not exists</param>
            <param name="value">The value to be inserted</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                <c>true</c> if field is a new field in the hash and value was set.
                <c>false</c> if field already exists in the hash and no operation was performed.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashSet``1(System.String,System.Collections.Generic.Dictionary{System.String,``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Sets the specified fields to their respective values in the hash stored at key. This command overwrites any existing fields in the hash. If key does not exist, a new key holding a hash is created.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being set.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="values"></param>
            <param name="commandFlags">Command execution flags</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashValues``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all values in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashScan``1(System.String,System.String,System.Int32,StackExchange.Redis.CommandFlags)">
            <summary>
                iterates fields of Hash types and their associated values.
            </summary>
            <remarks>
                Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. 
                N is the number of elements inside the collection.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="pattern">GLOB search pattern</param>
            <param name="pageSize">Number of elements to retrieve from the redis server in the cursor</param>
            <param name="commandFlags">Command execution flags</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashDeleteAsync(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                If key is deleted returns true.
                If key does not exist, it is treated as an empty hash and this command returns false.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashDeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
                If key does not exist, it is treated as an empty hash and this command returns 0.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields to be removed.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="keys">Keys to retrieve from the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Tthe number of fields that were removed from the hash, not including specified but non existing fields.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashExistsAsync(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns if field is an existing field in the hash stored at key.
            </summary>
            
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Returns if field is an existing field in the hash stored at key.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGetAsync``1(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the value associated with field in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value associated with field, or nil when field is not present in the hash or key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGetAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the values associated with the specified fields in the hash stored at key.
                For every field that does not exist in the hash, a nil value is returned. 
                Because a non-existing keys are treated as empty hashes, running HMGET against a non-existing key will return a list of nil values.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being requested.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="keys">Keys to retrieve from the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values associated with the given fields, in the same order as they are requested.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashGetAllAsync``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all fields and values of the hash stored at key. In the returned value, 
                every field name is followed by its value, so the length of the reply is twice the size of the hash.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields and their values stored in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashIncerementByAsync(System.String,System.String,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
                Increments the number stored at field in the hash stored at key by increment. 
                If key does not exist, a new key holding a hash is created. 
                If field does not exist the value is set to 0 before the operation is performed.
                The range of values supported by HINCRBY is limited to 64 bit signed integers.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashIncerementByAsync(System.String,System.String,System.Double,StackExchange.Redis.CommandFlags)">
            <summary>
                Increment the specified field of an hash stored at key, and representing a floating point number, by the specified increment. 
                If the field does not exist, it is set to 0 before performing the operation.
            </summary>
            <remarks>
                <para>
                    An error is returned if one of the following conditions occur:
                    * The field contains a value of the wrong type (not a string).
                    * The current field content or the specified increment are not parsable as a double precision floating point number.
                </para>
                <para>
                    Time complexity: O(1)
                </para>
                
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="value">the value at field after the increment operation</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value at field after the increment operation.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashKeysAsync(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all field names in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashLengthAsync(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the number of fields contained in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>number of fields in the hash, or 0 when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashSetAsync``1(System.String,System.String,``0,System.Boolean,StackExchange.Redis.CommandFlags)">
            <summary>
                Sets field in the hash stored at key to value. If key does not exist, a new key holding a hash is created. If field already exists in the hash, it is overwritten.
            </summary>
            
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="nx">Behave like hsetnx - set only if not exists</param>
            <param name="value">The value to be inserted</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                <c>true</c> if field is a new field in the hash and value was set.
                <c>false</c> if field already exists in the hash and no operation was performed.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashSetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Sets the specified fields to their respective values in the hash stored at key. 
                This command overwrites any existing fields in the hash. 
                If key does not exist, a new key holding a hash is created.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being set.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="values">The values to be inserted</param>
            <param name="commandFlags">Command execution flags</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashValuesAsync``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all values in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ICacheClient.HashScanAsync``1(System.String,System.String,System.Int32,StackExchange.Redis.CommandFlags)">
            <summary>
                iterates fields of Hash types and their associated values.
            </summary>
            <remarks>
                Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. 
                N is the number of elements inside the collection.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="pattern">GLOB search pattern</param>
            <param name="pageSize">Number of elements to retrieve from the redis server in the cursor</param>
            <param name="commandFlags">Command execution flags</param>
            <returns></returns> 
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.ISerializer">
            <summary>
            Contract for Serializer implementation
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.SerializeAsync(System.Object)">
            <summary>
            Serializes the asynchronous.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified bytes.
            </summary>
            <param name="serializedObject">The serialized object.</param>
            <returns>
            The instance of the specified Item
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.DeserializeAsync(System.Byte[])">
            <summary>
            Deserializes the specified bytes.
            </summary>
            <param name="serializedObject">The serialized object.</param>
            <returns>
            The instance of the specified Item
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.Deserialize``1(System.Byte[])">
            <summary>
            Deserializes the specified bytes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedObject">The serialized object.</param>
            <returns>
            The instance of the specified Item
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.ISerializer.DeserializeAsync``1(System.Byte[])">
            <summary>
            Deserializes the specified bytes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializedObject">The serialized object.</param>
            <returns>
            The instance of the specified Item
            </returns>
        </member>
        <member name="T:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient">
            <summary>
                The implementation of <see cref="T:StackExchange.Redis.Extensions.Core.ICacheClient" />
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.#ctor(StackExchange.Redis.Extensions.Core.ISerializer,StackExchange.Redis.Extensions.Core.Configuration.IRedisCachingConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient" /> class.
            </summary>
            <param name="serializer">The serializer.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.#ctor(StackExchange.Redis.Extensions.Core.ISerializer,System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient" /> class.
            </summary>
            <param name="serializer">The serializer.</param>
            <param name="connectionString">The connection string.</param>
            <param name="database">The database.</param>
            <exception cref="T:System.ArgumentNullException">serializer</exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.#ctor(StackExchange.Redis.ConnectionMultiplexer,StackExchange.Redis.Extensions.Core.ISerializer,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient" /> class.
            </summary>
            <param name="connectionMultiplexer">The connection multiplexer.</param>
            <param name="serializer">The serializer.</param>
            <param name="database">The database.</param>
            <exception cref="T:System.ArgumentNullException">
                connectionMultiplexer
                or
                serializer
            </exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Database">
            <summary>
                Return the instance of <see cref="T:StackExchange.Redis.IDatabase" /> used be ICacheClient implementation
            </summary>
        </member>
        <member name="P:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Serializer">
            <summary>
                Gets the serializer.
            </summary>
            <value>
                The serializer.
            </value>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Exists(System.String)">
            <summary>
                Verify that the specified cache key exists
            </summary>
            <param name="key">The cache key.</param>
            <returns>
                True if the key is present into Redis. Othwerwise False
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ExistsAsync(System.String)">
            <summary>
                Verify that the specified cache key exists
            </summary>
            <param name="key">The cache key.</param>
            <returns>
                True if the key is present into Redis. Othwerwise False
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Remove(System.String)">
            <summary>
                Removes the specified key from Redis Database
            </summary>
            <param name="key">The key.</param>
            <returns>
                True if the key has removed. Othwerwise False
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.RemoveAsync(System.String)">
            <summary>
                Removes the specified key from Redis Database
            </summary>
            <param name="key">The key.</param>
            <returns>
                True if the key has removed. Othwerwise False
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Removes all specified keys from Redis Database
            </summary>
            <param name="keys">The key.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.RemoveAllAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Removes all specified keys from Redis Database
            </summary>
            <param name="keys">The key.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Get``1(System.String)">
            <summary>
                Get the object with the specified key from Redis database
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="key">The cache key.</param>
            <returns>
                Null if not present, otherwise the instance of T.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.GetAsync``1(System.String)">
            <summary>
                Get the object with the specified key from Redis database
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="key">The cache key.</param>
            <returns>
                Null if not present, otherwise the instance of T.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Add``1(System.String,``0)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.AddAsync``1(System.String,``0)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Replace``1(System.String,``0)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ReplaceAsync``1(System.String,``0)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Add``1(System.String,``0,System.DateTimeOffset)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.AddAsync``1(System.String,``0,System.DateTimeOffset)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Replace``1(System.String,``0,System.DateTimeOffset)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ReplaceAsync``1(System.String,``0,System.DateTimeOffset)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresAt">Expiration time.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Add``1(System.String,``0,System.TimeSpan)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.AddAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
                Adds the specified instance to the Redis database.
            </summary>
            <typeparam name="T">The type of the class to add to Redis</typeparam>
            <param name="key">The cache key.</param>
            <param name="value">The instance of T.</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Replace``1(System.String,``0,System.TimeSpan)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ReplaceAsync``1(System.String,``0,System.TimeSpan)">
            <summary>
                Replaces the object with specified key into Redis database.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="value">The instance of T</param>
            <param name="expiresIn">The duration of the cache using Timespan.</param>
            <returns>
                True if the object has been added. Otherwise false
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.GetAll``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Get the objects with the specified keys from Redis database with one roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="keys">The keys.</param>
            <returns>
                Empty list if there are no results, otherwise the instance of T.
                If a cache key is not present on Redis the specified object into the returned Dictionary will be null
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.GetAllAsync``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Get the objects with the specified keys from Redis database with one roundtrip
            </summary>
            <typeparam name="T">The type of the expected object</typeparam>
            <param name="keys">The keys.</param>
            <returns>
                Empty list if there are no results, otherwise the instance of T.
                If a cache key is not present on Redis the specified object into the returned Dictionary will be null
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.AddAll``1(System.Collections.Generic.IList{System.Tuple{System.String,``0}})">
            <summary>
                Adds all.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.AddAllAsync``1(System.Collections.Generic.IList{System.Tuple{System.String,``0}})">
            <summary>
                Adds all asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetAdd(System.String,System.String)">
            <summary>
                Run SADD command see http://redis.io/commands/sadd
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetAddAsync(System.String,System.String)">
            <summary>
                Run SADD command see http://redis.io/commands/sadd
            </summary>
            <param name="memberName">Name of the member.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetAdd``1(System.String,``0)">
            <summary>
                Run SADD command http://redis.io/commands/sadd
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetAddAsync``1(System.String,``0)">
            <summary>
                Run SADD command http://redis.io/commands/sadd"
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetMember(System.String)">
            <summary>
                Run SMEMBERS command http://redis.io/commands/SMEMBERS
            </summary>
            <param name="memberName">Name of the member.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetMemberAsync(System.String)">
            <summary>
                Run SMEMBERS command see http://redis.io/commands/SMEMBERS
            </summary>
            <param name="memberName">Name of the member.</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SetMembersAsync``1(System.String)">
            <summary>
                Run SMEMBERS command see http://redis.io/commands/SMEMBERS
                Deserializes the results to T
            </summary>
            <typeparam name="T">The type of the expected objects</typeparam>
            <param name="key">The key</param>
            <returns>An array of objects in the set</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SearchKeys(System.String)">
            <summary>
                Searches the keys from Redis database
            </summary>
            <remarks>
                Consider this as a command that should only be used in production environments with extreme care. It may ruin
                performance when it is executed against large databases
            </remarks>
            <param name="pattern">The pattern.</param>
            <example>
                if you want to return all keys that start with "myCacheKey" uses "myCacheKey*"
                if you want to return all keys that contain with "myCacheKey" uses "*myCacheKey*"
                if you want to return all keys that end with "myCacheKey" uses "*myCacheKey"
            </example>
            <returns>A list of cache keys retrieved from Redis database</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SearchKeysAsync(System.String)">
            <summary>
                Searches the keys from Redis database
            </summary>
            <remarks>
                Consider this as a command that should only be used in production environments with extreme care. It may ruin
                performance when it is executed against large databases
            </remarks>
            <param name="pattern">The pattern.</param>
            <example>
                if you want to return all keys that start with "myCacheKey" uses "myCacheKey*"
                if you want to return all keys that contain with "myCacheKey" uses "*myCacheKey*"
                if you want to return all keys that end with "myCacheKey" uses "*myCacheKey"
            </example>
            <returns>A list of cache keys retrieved from Redis database</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.FlushDb">
            <summary>
                Flushes the database.
            </summary>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.FlushDbAsync">
            <summary>
                Flushes the database asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Save(StackExchange.Redis.SaveType)">
            <summary>
                Save the DB in background.
            </summary>
            <param name="saveType"></param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SaveAsync(StackExchange.Redis.SaveType)">
            <summary>
                Save the DB in background asynchronous.
            </summary>
            <param name="saveType"></param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.GetInfo">
            <summary>
                Gets the information about redis.
                More info see http://redis.io/commands/INFO
            </summary>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.GetInfoAsync">
            <summary>
                Gets the information about redis.
                More info see http://redis.io/commands/INFO
            </summary>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Publish``1(StackExchange.Redis.RedisChannel,``0,StackExchange.Redis.CommandFlags)">
            <summary>
                Publishes a message to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="message"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.PublishAsync``1(StackExchange.Redis.RedisChannel,``0,StackExchange.Redis.CommandFlags)">
            <summary>
                Publishes a message to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="message"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Subscribe``1(StackExchange.Redis.RedisChannel,System.Action{``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Registers a callback handler to process messages published to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.SubscribeAsync``1(StackExchange.Redis.RedisChannel,System.Func{``0,System.Threading.Tasks.Task},StackExchange.Redis.CommandFlags)">
            <summary>
                Registers a callback handler to process messages published to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.Unsubscribe``1(StackExchange.Redis.RedisChannel,System.Action{``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Unregisters a callback handler to process messages published to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.UnsubscribeAsync``1(StackExchange.Redis.RedisChannel,System.Func{``0,System.Threading.Tasks.Task},StackExchange.Redis.CommandFlags)">
            <summary>
                Unregisters a callback handler to process messages published to a channel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.UnsubscribeAll(StackExchange.Redis.CommandFlags)">
            <summary>
                Unregisters all callback handlers on a channel.
            </summary>
            <param name="flags"></param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.UnsubscribeAllAsync(StackExchange.Redis.CommandFlags)">
            <summary>
                Unregisters all callback handlers on a channel.
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ListAddToLeft``1(System.String,``0)">
            <summary>
                Insert the specified value at the head of the list stored at key. If key does not exist, it is created as empty
                list before performing the push operations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns>
                the length of the list after the push operations.
            </returns>
            <exception cref="T:System.ArgumentException">key cannot be empty.;key</exception>
            <exception cref="T:System.ArgumentNullException">item;item cannot be null.</exception>
            <remarks>
                http://redis.io/commands/lpush
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ListAddToLeftAsync``1(System.String,``0)">
            <summary>
                Lists the add to left asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">key cannot be empty.;key</exception>
            <exception cref="T:System.ArgumentNullException">item;item cannot be null.</exception>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ListGetFromRight``1(System.String)">
            <summary>
                Removes and returns the last element of the list stored at key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">key cannot be empty.;key</exception>
            <remarks>
                http://redis.io/commands/rpop
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.ListGetFromRightAsync``1(System.String)">
            <summary>
                Removes and returns the last element of the list stored at key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">key cannot be empty.;key</exception>
            <remarks>
                http://redis.io/commands/rpop
            </remarks>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashDelete(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                If key is deleted returns true.
                If key does not exist, it is treated as an empty hash and this command returns false.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashDelete(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
                If key does not exist, it is treated as an empty hash and this command returns 0.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields to be removed.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="keys"></param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Tthe number of fields that were removed from the hash, not including specified but non existing fields.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashExists(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns if field is an existing field in the hash stored at key.
            </summary>
            
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Returns if field is an existing field in the hash stored at key.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGet``1(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the value associated with field in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value associated with field, or nil when field is not present in the hash or key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGet``1(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the values associated with the specified fields in the hash stored at key.
                For every field that does not exist in the hash, a nil value is returned. 
                Because a non-existing keys are treated as empty hashes, running HMGET against a non-existing key will return a list of nil values.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being requested.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="keys"></param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values associated with the given fields, in the same order as they are requested.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGetAll``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all fields and values of the hash stored at key. In the returned value, every field name is followed by its value, so the length of the reply is twice the size of the hash.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields and their values stored in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashIncerementBy(System.String,System.String,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
                Increments the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. 
                If field does not exist the value is set to 0 before the operation is performed.
                The range of values supported by HINCRBY is limited to 64 bit signed integers.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashIncerementBy(System.String,System.String,System.Double,StackExchange.Redis.CommandFlags)">
            <summary>
                Increment the specified field of an hash stored at key, and representing a floating point number, by the specified increment. 
                If the field does not exist, it is set to 0 before performing the operation.
            </summary>
            <remarks>
                <para>
                    An error is returned if one of the following conditions occur:
                    * The field contains a value of the wrong type (not a string).
                    * The current field content or the specified increment are not parsable as a double precision floating point number.
                </para>
                <para>
                    Time complexity: O(1)
                </para>
                
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashKeys(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all field names in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashLength(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the number of fields contained in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>number of fields in the hash, or 0 when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashSet``1(System.String,System.String,``0,System.Boolean,StackExchange.Redis.CommandFlags)">
            <summary>
                Sets field in the hash stored at key to value. If key does not exist, a new key holding a hash is created. If field already exists in the hash, it is overwritten.
            </summary>
            
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="nx">Behave like hsetnx - set only if not exists</param>
            <param name="value">The value to be inserted</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                <c>true</c> if field is a new field in the hash and value was set.
                <c>false</c> if field already exists in the hash and no operation was performed.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashSet``1(System.String,System.Collections.Generic.Dictionary{System.String,``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Sets the specified fields to their respective values in the hash stored at key. This command overwrites any existing fields in the hash. If key does not exist, a new key holding a hash is created.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being set.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="values"></param>
            <param name="commandFlags">Command execution flags</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashValues``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all values in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashScan``1(System.String,System.String,System.Int32,StackExchange.Redis.CommandFlags)">
            <summary>
                iterates fields of Hash types and their associated values.
            </summary>
            <remarks>
                Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. 
                N is the number of elements inside the collection.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="pattern">GLOB search pattern</param>
            <param name="pageSize">Number of elements to retrieve from the redis server in the cursor</param>
            <param name="commandFlags">Command execution flags</param>
            <returns></returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashDeleteAsync(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                If key is deleted returns true.
                If key does not exist, it is treated as an empty hash and this command returns false.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashDeleteAsync(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Removes the specified fields from the hash stored at key. 
                Specified fields that do not exist within this hash are ignored. 
                If key does not exist, it is treated as an empty hash and this command returns 0.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields to be removed.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="keys">Keys to retrieve from the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Tthe number of fields that were removed from the hash, not including specified but non existing fields.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashExistsAsync(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns if field is an existing field in the hash stored at key.
            </summary>
            
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>Returns if field is an existing field in the hash stored at key.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGetAsync``1(System.String,System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the value associated with field in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value associated with field, or nil when field is not present in the hash or key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGetAsync``1(System.String,System.Collections.Generic.IEnumerable{System.String},StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the values associated with the specified fields in the hash stored at key.
                For every field that does not exist in the hash, a nil value is returned. 
                Because a non-existing keys are treated as empty hashes, running HMGET against a non-existing key will return a list of nil values.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being requested.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="keys">Keys to retrieve from the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values associated with the given fields, in the same order as they are requested.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashGetAllAsync``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all fields and values of the hash stored at key. In the returned value, 
                every field name is followed by its value, so the length of the reply is twice the size of the hash.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields and their values stored in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashIncerementByAsync(System.String,System.String,System.Int64,StackExchange.Redis.CommandFlags)">
            <summary>
                Increments the number stored at field in the hash stored at key by increment. If key does not exist, a new key holding a hash is created. 
                If field does not exist the value is set to 0 before the operation is performed.
                The range of values supported by HINCRBY is limited to 64 bit signed integers.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="commandFlags">Command execution flags</param>
            <param name="value">the value at field after the increment operation</param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashIncerementByAsync(System.String,System.String,System.Double,StackExchange.Redis.CommandFlags)">
            <summary>
                Increment the specified field of an hash stored at key, and representing a floating point number, by the specified increment. 
                If the field does not exist, it is set to 0 before performing the operation.
            </summary>
            <remarks>
                <para>
                    An error is returned if one of the following conditions occur:
                    * The field contains a value of the wrong type (not a string).
                    * The current field content or the specified increment are not parsable as a double precision floating point number.
                </para>
                <para>
                    Time complexity: O(1)
                </para>
                
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="key">Key of the entry</param>
            <param name="value">the value at field after the increment operation</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>the value at field after the increment operation.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashKeysAsync(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all field names in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of fields in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashLengthAsync(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns the number of fields contained in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(1)
            </remarks>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>number of fields in the hash, or 0 when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashSetAsync``1(System.String,System.String,``0,System.Boolean,StackExchange.Redis.CommandFlags)">
            <summary>
                Sets field in the hash stored at key to value. If key does not exist, a new key holding a hash is created. If field already exists in the hash, it is overwritten.
            </summary>
            
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">The key of the hash in redis</param>
            <param name="key">The key of the field in the hash</param>
            <param name="nx">Behave like hsetnx - set only if not exists</param>
            <param name="value">The value to be inserted</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>
                <c>true</c> if field is a new field in the hash and value was set.
                <c>false</c> if field already exists in the hash and no operation was performed.
            </returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashSetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,``0},StackExchange.Redis.CommandFlags)">
            <summary>
                Sets the specified fields to their respective values in the hash stored at key. 
                This command overwrites any existing fields in the hash. 
                If key does not exist, a new key holding a hash is created.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the number of fields being set.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command executions flags</param>
            <param name="values"></param>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashValuesAsync``1(System.String,StackExchange.Redis.CommandFlags)">
            <summary>
                Returns all values in the hash stored at key.
            </summary>
            <remarks>
                Time complexity: O(N) where N is the size of the hash.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="commandFlags">Command execution flags</param>
            <returns>list of values in the hash, or an empty list when key does not exist.</returns>
        </member>
        <member name="M:StackExchange.Redis.Extensions.Core.StackExchangeRedisCacheClient.HashScanAsync``1(System.String,System.String,System.Int32,StackExchange.Redis.CommandFlags)">
            <summary>
                iterates fields of Hash types and their associated values.
            </summary>
            <remarks>
                Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. 
                N is the number of elements inside the collection.
            </remarks>
            <typeparam name="T">Type of the returned value</typeparam>
            <param name="hashKey">Key of the hash</param>
            <param name="pattern">GLOB search pattern</param>
            <param name="pageSize"></param>
            <param name="commandFlags">Command execution flags</param>
            <returns></returns>
        </member>
    </members>
</doc>
