@using Manager.WebApp.Resources
@using System.Globalization
@using Manager.SharedLibs
@model Manager.WebApp.Models.LoginViewModel

@{ Layout = null; }

<!DOCTYPE html>
<html lang="en">
<!-- begin::Head -->
<head>
    <meta charset="utf-8" />
    <title>
        @ManagerResource.LB_LOGIN
    </title>
    <link rel="shortcut icon" href="~/Content/images/favicon-32x32.png" />
    <link rel="shortcut icon" href="~/Content/images/favicon-32x32.png" type="image/x-icon">

    <meta name="description" content="Latest updates and statistic charts">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!--begin::Web font -->
    <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js"></script>
    <script>
        WebFont.load({
            google: { "families": ["Poppins:300,400,500,600,700", "Roboto:300,400,500,600,700"] },
            active: function () {
                sessionStorage.fonts = true;
            }
        });
    </script>
    <!--end::Web font -->
    <!--begin::Base Styles -->
    <link href="~/assets/vendors/base/vendors.bundle.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/demo/default/base/style.bundle.css" rel="stylesheet" type="text/css" />
    <!--end::Base Styles -->
    <link href="@Url.VersionedContent("~/Content/Site.css")" rel="stylesheet">
    <style>
        .login-error-state { border: 1px solid #f4516c!important;padding: 10px 0px 10px 0px;border-radius: 30px; }
        .login-error-state ul { margin:0 }
        @@media (max-width: 1024px){
            .m-header--fixed-mobile .m-topbar {
                margin-top: 0;
                top: 0px;
            }
        }        
    </style>
</head>
<!-- end::Head -->
<!-- end::Body -->
<body class="m--skin- m-header--fixed m-header--fixed-mobile m-aside-left--enabled m-aside-left--skin-dark m-aside-left--offcanvas m-footer--push m-aside--offcanvas-default">
    <div id="m_header_topbar" class="m-topbar text-right" style="height:auto;padding-right:4%;">
        @{
            var langList = LanguagesProvider.GetListLanguages();
            var currentLang = CultureInfo.CurrentCulture.ToString();

            <div class="m-stack__item m-topbar__nav-wrapper">
                <ul class="m-topbar__nav m-nav m-nav--inline">
                    @if (langList.HasData())
                    {
                        var currentLangInfo = langList.FirstOrDefault(s => s.LanguageCultureName == currentLang);

                        if (currentLangInfo != null)
                        {
                            <li class="m-nav__item m-nav__item--accent m-dropdown m-dropdown--large m-dropdown--arrow m-dropdown--align-center m-dropdown--mobile-full-width" m-dropdown-toggle="click" m-dropdown-persistent="1" aria-expanded="true">
                                <a href="#" class="m-nav__link m-dropdown__toggle">
                                    <span class="m-nav__link-icon">
                                        <span class="m-nav__link-icon-wrapper" title="@currentLangInfo.LanguageFullName">
                                            <img class="image-lang" src="~/Content/images/flags/@(currentLangInfo.LanguageCultureName).png" />
                                        </span>
                                    </span>
                                </a>
                                <div class="m-dropdown__wrapper dropdown-custom">
                                    <span class="m-dropdown__arrow m-dropdown__arrow--center"></span>
                                    <div class="m-dropdown__inner">
                                        <div class="m-dropdown__body">
                                            <div class="m-dropdown__content">
                                                <ul class="m-menu__subnav">

                                                    @foreach (var item in langList)
                                                    {
                                                        <li class="m-menu__item @((currentLang == item.LanguageCultureName) ? "m-menu__item--active" : string.Empty)" aria-haspopup="true">
                                                            <a href="~/home/changelanguage?lang=@item.LanguageCultureName" class="m-menu__link " style="display:flex">
                                                                <div class="m-menu__link-icon" style="width:30px">
                                                                    <img class="image-lang" src="~/Content/images/flags/@(item.LanguageCultureName).png" />
                                                                </div>
                                                                <span class="m-menu__link-text" style="padding-left:10px">
                                                                    @{
                                                                        var array = item.LanguageCultureName.Split('-');
                                                                        if (array.Length == 2)
                                                                        {
                                                                            @array[1];
                                                                        }
                                                                    }
                                                                </span>
                                                            </a>
                                                        </li>
                                                    }

                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    }                    
                </ul>
            </div>
        }
    </div>

    <!-- begin:: Page -->
    <div class="m-grid m-grid--hor m-grid--root m-page">
        <div class="m-grid__item m-grid__item--fluid m-grid m-grid--hor m-login m-login--signin m-login--2 m-login-2--skin-2 mt0" id="m_login" style="background-image: url(/assets/app/media/img//bg/bg-3.jpg);">
            <div class="m-grid__item m-grid__item--fluid	m-login__wrapper" style="padding-top: 0;">
                <div class="m-login__container">
                    <div class="m-login__logo" style="">
                        <img class="img-responsive" src="~/Content/images/logo.png" style=" width: 80%;">
                    </div>
                    <div class="m-login__signin animated flipInX">
                        <div class="m-login__head">
                            <h3 class="m-login__title">
                                @ManagerResource.LB_LOGIN
                            </h3>
                        </div>
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", @class = "m-login__form m-form mt20" }))
                        {
                            @Html.AntiForgeryToken()

                            @*@Html.ValidationSummary(true, "", new { @class = "text-danger login-error-state" })*@
                            @Html.Partial("_Notifications")

                            if (Model != null)
                            {
                                if (Model.State == "email_inactive")
                                {
                                    <div class="m-login__account">
                                        <a href="/Agency/ResendEmailActive?email=@Model.Email" class="m-link m-link--light m-login__account-link">
                                            <i class="fa fa-envelope"></i> @ManagerResource.LB_RESEND_EMAIL_ACTIVE_ACCOUNT
                                        </a>
                                    </div>
                                }
                                else if (Model.State == "invalid_login")
                                {
                                    @*<div class="m-login__account">
                                        <a href="/Agency/ForgotPassword?email=@Model.Email" class="m-link m-link--light m-login__account-link">
                                            <i class="fa fa-question-circle"></i> @ManagerResource.LB_FOR_GOT_PASSWORD
                                        </a>
                                    </div>*@
                                }
                            }

                            <div class="form-group m-form__group m-form__group has-danger">
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control m-input mb5", placeholder = ManagerResource.LB_EMAIL_LOGIN, autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "form-control-feedback fz-14" })
                            </div>
                            <div class="form-group m-form__group m-form__group has-danger">
                                @Html.TextBoxFor(m => m.Password, new { type = "password", @class = "form-control mb5 m-input m-login__form-input--last", placeholder = ManagerResource.LB_PASSWORD, autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "form-control-feedback fz-14" })
                            </div>
                            <div class="row m-login__form-sub">
                                <div class="col m--align-left m-login__form-left">
                                    <label class="m-checkbox  m-checkbox--dark" for="@Html.IdFor(m=>m.RememberMe)">
                                        <input type="checkbox" id="@Html.IdFor(m=>m.RememberMe)" value="true" name="@Html.NameFor(m=>m.RememberMe)">
                                        @Html.DisplayNameFor(m => m.RememberMe)
                                        <span></span>
                                    </label>
                                </div>
                                <div class="col m--align-right m-login__form-right">
                                    <a href="/Agency/ForgotPassword" class="m-link">
                                        @ManagerResource.LB_FOR_GOT_PASSWORD ?
                                    </a>
                                    @*<a href="/Agency/ForgotPassword?email=@Model.Email" class="m-link m-link--light m-login__account-link">
                                        <i class="fa fa-question-circle"></i> @ManagerResource.LB_FOR_GOT_PASSWORD
                                    </a>*@
                                </div>
                            </div>
                            <div class="m-login__form-action">
                                <button id="" type="submit" class="btn btn-info m-btn m-btn--pill m-btn--custom m-btn--air  m-login__btn" style="font-family: 'Roboto',sans-serif!important;">
                                    @ManagerResource.LB_LOGIN
                                </button>
                            </div>
                        }
                    </div>
                    <div class="m-login__forget-password">
                        <div class="m-login__head">
                            <h3 class="m-login__title">
                                Forgotten Password ?
                            </h3>
                            <div class="m-login__desc">
                                Enter your email to reset your password:
                            </div>
                        </div>
                        <form class="m-login__form m-form mt20" action="" id="m_login_forget_password">
                            <div class="form-group m-form__group m-form__group has-danger">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control m-input", placeholder = ManagerResource.LB_EMAIL, autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "form-control-feedback fz-14" })
                            </div>
                            <div class="m-login__form-action">
                                <button id="m_login_forget_password_submit" class="btn btn-info m-btn m-btn--pill m-btn--custom m-btn--air m-login__btn" style="font-family: 'Roboto',sans-serif!important;">
                                    @ManagerResource.BT_SEND
                                </button>
                                &nbsp;&nbsp;
                                <button id="m_login_forget_password_cancel" class="btn btn-outline-info m-btn m-btn--pill m-btn--custom  m-login__btn" style="font-family: 'Roboto',sans-serif!important;">
                                    @ManagerResource.BT_CANCEL
                                </button>
                            </div>
                        </form>
                    </div>

                    <div class="m-login__account">
                        @*<span class="m-login__account-msg">
                            @ManagerResource.LB_DONT_HAVE_ACCOUNT_YET ?
                        </span>
                        &nbsp;&nbsp;*@
                        @*<a href="/Agency/Register" class="m-link m-link--light m-login__account-link">
                            @ManagerResource.LB_REGISTER_NEW_ACCOUNT
                        </a>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- end:: Page -->
    <!--begin::Base Scripts -->
    <script src="~/assets/vendors/base/vendors.bundle.js" type="text/javascript"></script>
    <script src="~/assets/demo/default/base/scripts.bundle.js" type="text/javascript"></script>

    <!--end::Base Scripts -->
    <!--begin::Page Snippets -->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        var SnippetLogin = function () {
            var s = $("#m_login"),
                n = function (e, i, a) {
                    var l = $('<div class="m-alert m-alert--outline alert alert-' + i + ' alert-dismissible" role="alert">\t\t\t<button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>\t\t\t<span></span>\t\t</div>');
                    e.find(".alert").remove(), l.prependTo(e), mUtil.animateClass(l[0], "fadeIn animated"), l.find("span").html(a)
                },
                o = function () {
                    s.removeClass("m-login--forget-password"), s.removeClass("m-login--signup"), s.addClass("m-login--signin"), mUtil.animateClass(s.find(".m-login__signin")[0], "flipInX animated")
                },
                e = function () {
                    $("#m_login_forget_password").click(function (e) {
                        e.preventDefault(), s.removeClass("m-login--signin"), s.removeClass("m-login--signup"), s.addClass("m-login--forget-password"), mUtil.animateClass(s.find(".m-login__forget-password")[0], "flipInX animated")
                    }), $("#m_login_forget_password_cancel").click(function (e) {
                        e.preventDefault(), o()
                    }), $("#m_login_signup").click(function (e) {
                        e.preventDefault(), s.removeClass("m-login--forget-password"), s.removeClass("m-login--signin"), s.addClass("m-login--signup"), mUtil.animateClass(s.find(".m-login__signup")[0], "flipInX animated")
                    }), $("#m_login_signup_cancel").click(function (e) {
                        e.preventDefault(), o()
                    })
                };
            return {
                init: function () {
                    e(), $("#m_login_signup_submit").click(function (e) {
                        e.preventDefault();
                        var t = $(this),
                            r = $(this).closest("form");
                        r.validate({
                            rules: {
                                fullname: {
                                    required: !0
                                },
                                email: {
                                    required: !0,
                                    email: !0
                                },
                                password: {
                                    required: !0
                                },
                                rpassword: {
                                    required: !0
                                },
                                agree: {
                                    required: !0
                                }
                            }
                        }), r.valid() && (t.addClass("m-loader m-loader--right m-loader--light").attr("disabled", !0), r.ajaxSubmit({
                            url: "",
                            success: function (e, i, a, l) {
                                setTimeout(function () {
                                    t.removeClass("m-loader m-loader--right m-loader--light").attr("disabled", !1), r.clearForm(), r.validate().resetForm(), o();
                                    var e = s.find(".m-login__signin form");
                                    e.clearForm(), e.validate().resetForm(), n(e, "success", "Thank you. To complete your registration please check your email.")
                                }, 2e3)
                            }
                        }))
                    }), $("#m_login_forget_password_submit").click(function (e) {
                        e.preventDefault();
                        var t = $(this),
                            r = $(this).closest("form");
                        r.validate({
                            rules: {
                                email: {
                                    required: !0,
                                    email: !0
                                }
                            }
                        }), r.valid() && (t.addClass("m-loader m-loader--right m-loader--light").attr("disabled", !0), r.ajaxSubmit({
                            url: "/Agency/Abc",
                            success: function (e, i, a, l) {
                                setTimeout(function () {
                                    t.removeClass("m-loader m-loader--right m-loader--light").attr("disabled", !1), r.clearForm(), r.validate().resetForm(), o();
                                    var e = s.find(".m-login__signin form");
                                    e.clearForm(), e.validate().resetForm(), n(e, "success", "Cool! Password recovery instruction has been sent to your email.")
                                }, 2e3)
                            },
                            error: function (e, i, a, l) {
                                setTimeout(function () {
                                    t.removeClass("m-loader m-loader--right m-loader--light").attr("disabled", !1), r.clearForm(), r.validate().resetForm(), o();
                                    var e = s.find(".m-login__signin form");
                                    e.clearForm(), e.validate().resetForm(), n(e, "danger", "Error! .")
                                }, 2e3)
                            }
                        }))
                    })
                }
            }
        }();
        jQuery(document).ready(function () {
            //SnippetLogin.init()
        });
    </script>
    <!--end::Page Snippets -->
</body>
<!-- end::Body -->
</html>
