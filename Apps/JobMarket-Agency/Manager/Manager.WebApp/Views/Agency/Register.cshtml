@using Manager.WebApp.Resources
@using System.Globalization
@using Manager.SharedLibs
@model Manager.WebApp.Models.AgencyRegisterModel

@{ Layout = null; }

<!DOCTYPE html>
<html lang="en">
<!-- begin::Head -->
<head>
    <meta charset="utf-8" />
    <title>
        @ManagerResource.LB_AGENCY_REGISTER_LABEL;
    </title>
    <link rel="shortcut icon" href="~/Content/images/favicon-32x32.png" />
    <link rel="shortcut icon" href="~/Content/images/favicon-32x32.png" type="image/x-icon">

    <meta name="description" content="Latest updates and statistic charts">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!--begin::Web font -->
    <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js"></script>
    <script>
        WebFont.load({
            google: { "families": ["Poppins:300,400,500,600,700", "Roboto:300,400,500,600,700"] },
            active: function () {
                sessionStorage.fonts = true;
            }
        });
    </script>
    <!--end::Web font -->
    <!--begin::Base Styles -->
    <link href="~/assets/vendors/base/vendors.bundle.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/demo/default/base/style.bundle.css" rel="stylesheet" type="text/css" />
    <!--end::Base Styles -->
    <link href="@Url.VersionedContent("~/Content/Site.css")" rel="stylesheet">
    <style>
        .login-error-state {
            border: 1px solid #f4516c !important;
            padding: 10px 0px 10px 0px;
            border-radius: 30px;
        }

            .login-error-state ul {
                margin: 0
            }

        @@media (max-width: 1024px) {
            .m-header--fixed-mobile .m-topbar {
                margin-top: 0;
                top: 0px;
            }
        }
    </style>
</head>
<!-- end::Head -->
<!-- end::Body -->
<body class="m--skin- m-header--fixed m-header--fixed-mobile m-aside-left--enabled m-aside-left--skin-dark m-aside-left--offcanvas m-footer--push m-aside--offcanvas-default">
    <div id="m_header_topbar" class="m-topbar text-right" style="height:auto;padding-right:4%;">
        @{
            var langList = LanguagesProvider.GetListLanguages();
            var currentLang = CultureInfo.CurrentCulture.ToString();

            <div class="m-stack__item m-topbar__nav-wrapper">
                <ul class="m-topbar__nav m-nav m-nav--inline">
                    @if (langList.HasData())
                    {
                        var currentLangInfo = langList.FirstOrDefault(s => s.LanguageCultureName == currentLang);

                        if (currentLangInfo != null)
                        {
                            <li class="m-nav__item m-nav__item--accent m-dropdown m-dropdown--large m-dropdown--arrow m-dropdown--align-center m-dropdown--mobile-full-width" m-dropdown-toggle="click" m-dropdown-persistent="1" aria-expanded="true">
                                <a href="#" class="m-nav__link m-dropdown__toggle">
                                    <span class="m-nav__link-icon">
                                        <span class="m-nav__link-icon-wrapper" title="@currentLangInfo.LanguageFullName">
                                            <img class="image-lang" src="~/Content/images/flags/@(currentLangInfo.LanguageCultureName).png" />
                                        </span>
                                    </span>
                                </a>
                                <div class="m-dropdown__wrapper dropdown-custom">
                                    <span class="m-dropdown__arrow m-dropdown__arrow--center"></span>
                                    <div class="m-dropdown__inner">
                                        <div class="m-dropdown__body">
                                            <div class="m-dropdown__content">
                                                <ul class="m-menu__subnav">

                                                    @foreach (var item in langList)
                                                    {
                                                        <li class="m-menu__item @((currentLang == item.LanguageCultureName) ? "m-menu__item--active" : string.Empty)" aria-haspopup="true">
                                                            <a href="~/home/changelanguage?lang=@item.LanguageCultureName" class="m-menu__link " style="display:flex">
                                                                <div class="m-menu__link-icon" style="width:30px">
                                                                    <img class="image-lang" src="~/Content/images/flags/@(item.LanguageCultureName).png" />
                                                                </div>
                                                                <span class="m-menu__link-text" style="padding-left:10px">
                                                                    @{
                                                                        var array = item.LanguageCultureName.Split('-');
                                                                        if (array.Length == 2)
                                                                        {
                                                                            @array[1];
                                                                        }
                                                                    }
                                                                </span>
                                                            </a>
                                                        </li>
                                                    }

                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>
        }
    </div>

    <!-- begin:: Page -->
    <div class="m-grid m-grid--hor m-grid--root m-page">
        <div class="m-grid__item m-grid__item--fluid m-grid m-grid--hor m-login m-login--signin m-login--2 m-login-2--skin-2 mt0" id="m_login" style="background-image: url(/assets/app/media/img//bg/bg-3.jpg);">
            <div class="m-grid__item m-grid__item--fluid	m-login__wrapper" style="padding-top: 0;">
                <div class="m-login__container">
                    <div class="m-login__logo" style="margin: 0 auto 2rem auto;">
                        <img class="img-responsive" src="~/Content/images/logo.png" style=" width: 45%;">
                    </div>
                    <div class="m-login__signin">
                        <div class="m-login__head">
                            <h3 class="m-login__title">
                                @ManagerResource.LB_AGENCY_REGISTER_LABEL
                            </h3>
                        </div>
                        @using (Html.BeginForm("Register", "Agency", null, FormMethod.Post, new { role = "form", @class = "m-form m-form--fit m-form--label-align-right0" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Partial("_Notifications")

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Company, new { @class = "form-control m-input", placeholder = ManagerResource.LB_COMPANY_NAME })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-building"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Company, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control m-input", placeholder = ManagerResource.LB_PERSON_INCHARGE_NAME })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-user"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Name, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control m-input", placeholder = ManagerResource.LB_ADDRESS })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-map"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Address, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control m-input", placeholder = ManagerResource.LB_EMAIL })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-at"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Email, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control m-input", placeholder = ManagerResource.LB_PHONE })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-phone"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Phone, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Website, new { @class = "form-control m-input", placeholder = ManagerResource.LB_WEBSITE })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-chain"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Website, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control m-input", @type = "password", placeholder = ManagerResource.LB_PASSWORD })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-lock"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.Password, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <div class="m-input-icon m-input-icon--left">
                                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control m-input", @type = "password", placeholder = ManagerResource.LB_CONFIRM_PASSWORD })
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span>
                                            <i class="la la-lock"></i>
                                        </span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="form-group m-form__group">
                                <label class="m-checkbox m-checkbox--square mb0">
                                    @Html.CheckBoxFor(x => x.TermsAndConditions)
                                    <label for="TermsAndConditions" style="font-weight:500">@ManagerResource.LB_READ_AND_AGREE <a href="/policy/termsofuse" target="_blank">@ManagerResource.LB_TERMS_AND_CONDITIONS</a></label>
                                    <span></span>
                                </label>
                                <br />
                                @Html.ValidationMessageFor(x => x.TermsAndConditions, null, new { @class = " text-danger fz-14" })
                            </div>

                            <div class="m-login__form-action mt10 text-center">
                                <button type="submit" class="btn btn-info m-btn m-btn--pill m-btn--custom m-btn--air  m-login__btn" style="font-family: 'Roboto',sans-serif!important;">
                                    @ManagerResource.BT_REGISTER
                                </button>
                            </div>

                            <div class="col m--align-center mt20">
                                @ManagerResource.LB_HAVE_ACCOUNT_YET ?
                                <a href="/" id="m_login_forget_password" class="m-link">
                                    @ManagerResource.LB_LOGIN
                                </a>
                            </div>
                        }
                    </div>                    
                </div>
            </div>
        </div>
    </div>
    <!-- end:: Page -->
    <!--begin::Base Scripts -->
    <script src="~/assets/vendors/base/vendors.bundle.js" type="text/javascript"></script>
    <script src="~/assets/demo/default/base/scripts.bundle.js" type="text/javascript"></script>

    <!--end::Base Scripts -->
    <!--begin::Page Snippets -->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        // extend jquery range validator to work for required checkboxes
        var defaultRangeValidator = $.validator.methods.range;
        $.validator.methods.range = function (value, element, param) {
            if (element.type === 'checkbox') {
                // if it's a checkbox return true if it is checked
                return element.checked;
            } else {
                // otherwise run the default validation function
                return defaultRangeValidator.call(this, value, element, param);
            }
        }
    </script>
    <!--end::Page Snippets -->
</body>
<!-- end::Body -->
</html>
