@using Manager.WebApp.Caching
@using Manager.WebApp.Resources
@using Manager.SharedLibs
@model Manager.WebApp.Models.ManageInvitationModel

@{
    var currentLang = UserCookieManager.GetCurrentLanguageOrDefault();
    var hasCompanies = Model.Companies.HasData();
    var hasCVs = Model.CVs.HasData();
}

<div class="m-portlet__body">
    <div class="row">
        <div class="col-sm-12">
            <div class="m-section">
                <div class="m-section__content table-responsive" style="max-height:300px;overflow:auto;">
                    <table id="sample-table-1" class="table m-table m-table--head-bg-brand table-bordered">
                        <thead>
                            <tr>
                                <th class="text-center" width="50"></th>
                                <th class="text-center">@ManagerResource.LB_APPLICANT</th>
                                <th class="text-center">@ManagerResource.LB_SENT_DATE</th>
                                <th class="text-center">@ManagerResource.LB_STATUS</th>
                                <th class="text-center">@ManagerResource.LB_ACCEPTED_DATE</th>
                            </tr>
                        </thead>

                        <tbody>
                            @if (Model.SearchResults.HasData() && hasCVs)
                            {
                                var stt = 0;
                                foreach (var record in Model.SearchResults)
                                {
                                    stt++;
                                    var jobName = string.Empty;
                                    var currentCv = Model.CVs.Where(x => x.id == record.cv_id).FirstOrDefault();

                                    if (currentCv == null)
                                    {
                                        continue;
                                    }

                                    var jobInfo = record.job_info;
                                    if (jobInfo == null)
                                    {
                                        continue;
                                    }

                                    if (jobInfo != null && jobInfo.Job_translations.HasData())
                                    {
                                        jobName = jobInfo.Job_translations.Where(x => x.language_code == currentLang).Select(x => x.title).FirstOrDefault();
                                        if (string.IsNullOrEmpty(jobName))
                                        {
                                            jobName = jobInfo.Job_translations.Where(x => x.language_code != currentLang).Select(x => x.title).FirstOrDefault();
                                        }
                                    }
                                    <tr>
                                        <td class="text-center">@(stt + (Model.CurrentPage - 1) * Model.PageSize) </td>
                                        <td>
                                            @if (currentCv != null)
                                            {
                                                var previewLink = SecurityHelper.GenerateSecureLink("CV", "Preview", new { id = record.cv_id });
                                                <a class="" href="@previewLink" target="_blank" title="@currentCv.fullname">
                                                    @if (!string.IsNullOrEmpty(currentCv.image_full_path))
                                                    {
                                                        <img class="avatar-img" onerror="this.onerror=null;this.src='/Content/images/no-image.png';" src="@currentCv.image_full_path" title="" />
                                                    }

                                                    <span class="ml10">@currentCv.fullname</span>
                                                </a>
                                            }
                                        </td>
                                        @*<td>@currentCv.phone</td>
                                        <td>@currentCv.email</td>*@
                                        <td class="text-center">
                                            @Html.Partial("Partials/_Status", record.status)
                                        </td>
                                        <td class="text-center">
                                            @record.accept_time.DateTimeQuestToString()
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="11">
                                        @ManagerResource.LB_NO_RECORD
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @RenderPaging()
                </div>
            </div>
        </div>
    </div>
</div>


@helper RenderPaging()
{
    if (Model.WasOverRecordsInPage())
    {
        <div class="m_datatable m-datatable m-datatable--default m-datatable--brand m-datatable--loaded">
            <div class="m-datatable__pager m-datatable--paging-loaded clearfix">
                @Html.BootstrapPager(Model.CurrentPage, index => "javascript:;",
                     Model.TotalCount, pageSize: Model.PageSize, numberOfLinks: 10, onclickEnvent: "GetReceiversSearchNext")
            </div>
        </div>
    }
}

