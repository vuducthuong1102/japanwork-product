@using Manager.WebApp.Resources
@using Manager.SharedLibs
@using Manager.WebApp.Caching
@model Manager.WebApp.Models.AccessRolesViewModel

@{
    //ViewBag.Title = ManagerResource.LB_GRANT_PERMISSION;
}


@Html.Partial("_Notifications")


@RenderForm()



@helper RenderForm()
{
    var currentLang = UserCookieManager.GetCurrentLanguageOrDefault();
    var isAdmin = AccountHelper.CurrentUserIsAdmin();
    var isAgency = AccountHelper.CurrentUserIsAgency();
    <!--begin::Portlet-->
    <div class="m-portlet m-portlet--full-height mb-0">
        @using (Html.BeginForm("UpdateAccessRoles", "AccessRoles", FormMethod.Post, new { role = "form" }))
        {
            <div class="m-portlet__body">
                <div class="row form-group">
                    <div class="col-md-4">
                        <select class="form-control selectpicker" name="RoleId" id="RoleId" onchange="SelectRole();">
                            <option value="">@ManagerResource.LB_SELECT_ROLE</option>
                            @if (Model.AllRoles != null && Model.AllRoles.Count > 0)
                            {
                                foreach (var role in Model.AllRoles)
                                {
                                    if (!isAdmin)
                                    {
                                        if (role.Name.ToLower() == "admin")
                                        {
                                            continue;
                                        }
                                    }
                                    <option value="@role.Id" @((Model.RoleId == role.Id) ? "selected" : string.Empty)>@role.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-8">
                        <button class="btn btn-info pull-right" type="submit">
                            <i class="fa fa-download"></i>
                            @ManagerResource.LB_SAVE
                        </button>
                    </div>
                </div>

                @Html.AntiForgeryToken()

                <!--begin::Section-->
                @if (Model.Menus.HasData())
                {
                    Model.Menus = MenuHelper.GetCurrentListMenuByLang(Model.Menus);
                    var count = 0;
                    <div class="m-accordion m-accordion--default m-accordion--toggle-arrow" id="m_accordion_7" role="tablist">
                        <!--begin::Item-->
                        @foreach (var mi in Model.Menus)
                        {
                            count++;
                            //if (!isAdmin && (acc.AccessName == "Menu" || acc.AccessName == "FrontEndSystem" || acc.AccessName == "Navigation"
                            //    || acc.AccessName == "Access" || acc.AccessName == "Function"))
                            //{

                            //    count++;
                            //    continue;
                            //}

                            // Menu setting Id =  2180
                            if (mi.Id != 2180)
                            {
                                var desLang = string.Empty;
                                if (mi.LangList.HasData())
                                {
                                    desLang = mi.LangList.Where(x => x.LangCode == currentLang).Select(x => x.Title).FirstOrDefault();
                                }

                                if (string.IsNullOrEmpty(desLang))
                                {
                                    desLang = mi.Title;
                                }

                                <div class="m-accordion__item">
                                    <div class="m-accordion__item-head collapsed" role="tab" id="m_accordion_@(count)_item_1_head" data-toggle="collapse" href="#m_accordion_@(count)_item_1_body" aria-expanded="false">

                                        <span class="m-accordion__item-title">
                                            @desLang
                                        </span>
                                        <span class="m-accordion__item-mode"></span>
                                    </div>
                                    <div class="m-accordion__item-body collapse" id="m_accordion_@(count)_item_1_body" role="tabpanel" aria-labelledby="m_accordion_@(count)_item_1_head" data-parent="#m_accordion_@(count)">
                                        <div class="m-accordion__item-content">
                                            <div class="m-checkbox-inline">
                                                @if (mi.Visible && (mi.HasChildren || (!string.IsNullOrEmpty(mi.Action) && !string.IsNullOrEmpty(mi.Controller)))
)
                                                {
                                                    int countItem = mi.SubMenu.Count();

                                                    foreach (var itemChild in mi.SubMenu)
                                                    {
                                                        var checkExistMenu = true;
                                                        countItem--;
                                                        var childLang = string.Empty;
                                                        if (itemChild.LangList.HasData())
                                                        {
                                                            childLang = itemChild.LangList.Where(x => x.LangCode == currentLang).Select(x => x.Title).FirstOrDefault();
                                                        }

                                                        if (string.IsNullOrEmpty(childLang))
                                                        {
                                                            childLang = itemChild.Title;
                                                        }

                                                        var acc = Model.AllAccess.FirstOrDefault(s => s.AccessName == itemChild.Controller);

                                                        if (acc != null && acc.OperationsList.HasData())
                                                        {
                                                            if (acc.AccessName == "ProfileAgency")
                                                            {
                                                                if (isAgency) { continue; }
                                                            }
                                                            var listOperations = acc.OperationsList;
                                                            if (itemChild.Controller == "Process")
                                                            {
                                                                listOperations = listOperations.Where(s => s.ActionName != "Job" && s.ActionName != "JobSeeker").ToList();
                                                                @RenderItem(listOperations, currentLang)
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                listOperations = listOperations.Where(s => s.ActionName != "Index").ToList();
                                                                if (listOperations.HasData())
                                                                {
                                                                    <div class="col-md-12 form-group row">
                                                                        <b>@childLang</b>
                                                                    </div>

                                                                    @RenderItem(listOperations, currentLang)
                                                                }
                                                                else
                                                                {
                                                                    checkExistMenu = false;
                                                                }
                                                            }
                                                        }
                                                        if (countItem > 0 && checkExistMenu)
                                                        {
                                                            <hr />
                                                        }
                                                    }

                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            count++;
                        }

                        <!--end::Item-->
                    </div>
                }
                <!--end::Section-->
            </div>
        }
    </div>
    <!--end::Portlet-->
}
@helper RenderItem(List<MsSql.AspNet.Identity.Entities.IdentityOperation> listOperations, string currentLang)
{
    if (listOperations.HasData())
    {
        foreach (var op in listOperations)
        {
            var desOperationLang = string.Empty;
            if (op.LangList.HasData())
            {
                desOperationLang = op.LangList.Where(x => x.LangCode == currentLang).Select(x => x.OperationName).FirstOrDefault();
            }

            if (string.IsNullOrEmpty(desOperationLang))
            {
                desOperationLang = op.OperationName;
            }
            var isChecked = false;
            if (Model.PermissionsList != null && Model.PermissionsList.Count > 0)
            {
                if (Model.PermissionsList != null && Model.PermissionsList.Count > 0)
                {
                    foreach (var per in Model.PermissionsList)
                    {
                        if (op.Id == per.OperationId)
                        {
                            isChecked = true;
                        }
                    }
                }
            }
            if (isChecked)
            {
                <label class="m-checkbox">
                    <input name="selectedOperations" id="@op.Id" value="@op.Id" class="m-checkbox m-checkbox--state-success" checked type="checkbox">
                    @desOperationLang
                    <span></span>
                </label>
            }
            else
            {
                <label class="m-checkbox">
                    <input name="selectedOperations" id="@op.Id" value="@op.Id" class="m-checkbox m-checkbox--state-primary" type="checkbox">
                    @desOperationLang
                    <span></span>
                </label>
            }
        }
    }
    else
    {
        <div><label class="label label-default">-</label></div>
    }
}
@section PageInlineScripts{
    <script type="text/javascript">
        function SelectRole() {
            window.location.href = "?RoleId=" + $("#RoleId").val();
        }
        setTimeout(function () {
            $(".selectpicker").selectpicker({ width: '100%' });
        }, 300);
        $(".m-scrollable").each(function () {
            var t = $(this);
            var height = window.innerHeight;
            var width = window.innerWidth;
            if (width > 768) {
                t.data("original-height", t.data("max-height")), t.css("height", (height - 220) + "px"), t.css("max-height", (height - 220) + "px"), mApp.initScroller(t, {});
            }
        });
    </script>
}