@model Manager.WebApp.Models.SettingsViewModel

@{    
    ViewBag.Title = "System Settings";    
}

@*@if (!ViewContext.ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <button type="button" class="close" data-dismiss="alert">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <strong>
            <i class="ace-icon fa fa-times"></i>
            Error!
        </strong>
        Cannot save Settings:
        <ul class="list-unstyled spaced">

            @foreach (var item in ViewContext.ViewData.ModelState)
            {
                if (item.Value.Errors.Any())
                {
                    foreach (var errmsg in item.Value.Errors)
                    {
                        <li>
                            <i class="ace-icon fa fa-caret-right bigger-110 green"></i>
                            <strong>@item.Key</strong>:  @errmsg.ErrorMessage
                        </li>
                    }
                }
            }
        </ul>
        <br>
    </div>
}*@


    @*@Html.Partial("_ValidationSummary", ViewData.ModelState)*@

    @Html.Partial("_Notifications")

    <div class="row">
        <div class="col-sm-12">
            @using (Html.BeginForm("Settings", "System", FormMethod.Post, new { id = "frmSettings", enctype = "multipart/form-data" }))
            {                
                @Html.AntiForgeryToken()                       
                @Html.HiddenFor(m => m.CurrentSettingsType)         
                
                
            <div class="tabbable">
                <ul class="nav nav-tabs" id="myTab">
                    <li class="@(Model.CurrentSettingsType == Model.SystemSestings.General.GetType().Name?"active":"")">
                        <a data-toggle="tab" href="#@Model.SystemSestings.General.GetType().Name">
                            <i class="green ace-icon fa fa fa-asterisk bigger-120"></i>
                            General Settings
                        </a>
                    </li>
                    <li class="@(Model.CurrentSettingsType == Model.SystemSestings.Cache.GetType().Name?"active":"")">
                        <a data-toggle="tab" href="#@Model.SystemSestings.Cache.GetType().Name">
                            <i class="green ace-icon fa fa-barcode bigger-120"></i>
                            Cache Settings
                        </a>
                    </li>

                    
                    <li class="@(Model.CurrentSettingsType == Model.SystemSestings.Mail.GetType().Name?"active":"")">
                        <a data-toggle="tab" href="#@Model.SystemSestings.Mail.GetType().Name">
                            <i class="green ace-icon fa fa-envelope bigger-120"></i>
                            Mail Settings
                        </a>
                    </li>                    
                    
                    <li class="@(Model.CurrentSettingsType == Model.SystemSestings.Ftp.GetType().Name ? "active" : "")">
                        <a data-toggle="tab" href="#@Model.SystemSestings.Ftp.GetType().Name">
                            <i class="green ace-icon fa fa-upload bigger-120"></i>
                            Ftp Settings
                        </a>
                    </li>

                    <li class="@(Model.CurrentSettingsType == Model.SystemSestings.Feed.GetType().Name ? "active" : "")">
                        <a data-toggle="tab" href="#@Model.SystemSestings.Feed.GetType().Name">
                            <i class="green ace-icon fa fa-upload bigger-120"></i>
                            Feed Settings
                        </a>
                    </li>

                    <li class="pull-right">
                        <button class="btn btn-sm btn-success">
                            <i class="ace-icon fa fa-floppy-o bigger-120"></i>
                            SAVE SETTINGS
                        </button>
                    </li>
                </ul>                

                <div class="tab-content">
                    <div id="@Model.SystemSestings.General.GetType().Name" class="tab-pane fade @(Model.CurrentSettingsType == Model.SystemSestings.General.GetType().Name ? "active in" : "")">
                        <div class="form-group">
                            @*<span class="help-button" data-original-title="Hello Tooltip!" data-rel="tooltip" data-placement="top">?</span>*@
                            @Html.LabelForRequired(m => m.SystemSestings.General.SiteName)                            
                            @Html.HelpButtonFor(m=>m.SystemSestings.General.SiteName)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.General.SiteName, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.General.SiteName) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.General.SiteName)
                            </div>
                        </div>

                        <div class="form-group">                            
                            @Html.LabelForRequired(m => m.SystemSestings.General.AdminEmail)
                            @Html.HelpButtonFor(m => m.SystemSestings.General.AdminEmail)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.General.AdminEmail, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.General.AdminEmail) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.General.AdminEmail)
                            </div>
                        </div>                       

                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.General.TimeZoneId)
                            @Html.HelpButtonFor(m => m.SystemSestings.General.TimeZoneId)
                            <div>
                                @Html.DropDownListFor(m => m.SystemSestings.General.TimeZoneId, Model.TimeZoneList(),"Choose a specific timezone", new { @class = "form-control"})
                                @Html.ValidationMessageFor(m => m.SystemSestings.General.TimeZoneId)
                            </div>
                        </div>

                    </div>
                    <div id="@Model.SystemSestings.Cache.GetType().Name" class="tab-pane fade @(Model.CurrentSettingsType == Model.SystemSestings.Cache.GetType().Name ? "active in" : "")">
                        
                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Cache.CacheProvider)
                            @Html.HelpButtonFor(m => m.SystemSestings.Cache.CacheProvider)
                            <div>
                                @Html.DropDownListFor(m => m.SystemSestings.Cache.CacheProvider, Model.CacheProviderList(), "Choose a specific CacheProvider", new { @class = "form-control"})
                                @Html.ValidationMessageFor(m => m.SystemSestings.Cache.CacheProvider)
                            </div>
                        </div>   


                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Cache.SystemDefaultCacheDuration)
                            @Html.HelpButtonFor(m => m.SystemSestings.Cache.SystemDefaultCacheDuration)                            

                            <div>

                                @Html.TextBoxFor(m => m.SystemSestings.Cache.SystemDefaultCacheDuration, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Cache.SystemDefaultCacheDuration) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Cache.SystemDefaultCacheDuration)
                                
                            </div>
                        </div>



                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration)
                            @Html.HelpButtonFor(m => m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration)

                            <div>

                                @Html.TextBoxFor(m => m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration)

                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Cache.WebApiEpgOTTCacheDuration)
                            @Html.HelpButtonFor(m => m.SystemSestings.Cache.WebApiEpgOTTCacheDuration)

                            <div>

                                @Html.TextBoxFor(m => m.SystemSestings.Cache.WebApiEpgOTTCacheDuration, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Cache.WebApiEpgOTTCacheDuration) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Cache.WebApiEpgOTTCacheDuration)

                            </div>
                        </div>


                    </div>


                    <div id="@Model.SystemSestings.Mail.GetType().Name" class="tab-pane fade @(Model.CurrentSettingsType == Model.SystemSestings.Mail.GetType().Name ? "active in" : "")">
                        

                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Mail.SmtpServer)
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpServer)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Mail.SmtpServer, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Mail.SmtpServer) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Mail.SmtpServer)
                            </div>
                        </div>
                        
                        
                        
                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Mail.SmtpPort)
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpPort)

                            <div>

                                @Html.TextBoxFor(m => m.SystemSestings.Mail.SmtpPort, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Mail.SmtpPort) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Mail.SmtpPort)

                            </div>
                        </div>
                         
                        <div class="form-group">
                            
                            <label>
                                @Html.CheckBoxFor(m => m.SystemSestings.Mail.SmtpUseSsl)
                                @*<input name="SystemSestings.Mail.SmtpUseSsl" id="SystemSestings_Mail_SmtpUseSsl" class="ace" type="checkbox" value="true" data-val-required="The Smtp UseSSL field is required." data-val="true">
                                <input name="SystemSestings.Mail.SmtpUseSsl" type="hidden" value="false">*@
                                @*<input name="@Html.NameFor(m=>m.SystemSestings.Mail.SmtpUseSsl)" id="@Html.IdFor(m=>m.SystemSestings.Mail.SmtpUseSsl)" class="ace" type="checkbox">*@
                                @*<input name="@Html.NameFor(m=>m.SystemSestings.Mail.SmtpUseSsl)" type="hidden" value="false">*@
                                <span class="lbl"> @Html.DisplayNameFor(m=>m.SystemSestings.Mail.SmtpUseSsl) </span>
                            </label>
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpUseSsl)
                        </div>


                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Mail.SmtpTimeout)
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpTimeout)

                            <div>

                                @Html.TextBoxFor(m => m.SystemSestings.Mail.SmtpTimeout, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Mail.SmtpTimeout) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Mail.SmtpTimeout)

                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Mail.SmtpUsername)
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpUsername)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Mail.SmtpUsername, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Mail.SmtpUsername) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Mail.SmtpUsername)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Mail.SmtpPassword)
                            @Html.HelpButtonFor(m => m.SystemSestings.Mail.SmtpPassword)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Mail.SmtpPassword, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Mail.SmtpPassword) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Mail.SmtpPassword)
                            </div>
                        </div>

                    </div>

                    <div id="@Model.SystemSestings.Ftp.GetType().Name" class="tab-pane fade @(Model.CurrentSettingsType == Model.SystemSestings.Ftp.GetType().Name ? "active in" : "")">
                        
                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Ftp.FtpServer)
                            @Html.HelpButtonFor(m => m.SystemSestings.Ftp.FtpServer)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Ftp.FtpServer, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Ftp.FtpServer) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Ftp.FtpServer)
                            </div>
                        </div>



                        <div class="form-group">

                            @Html.LabelForRequired(m => m.SystemSestings.Ftp.FtpPort)
                            @Html.HelpButtonFor(m => m.SystemSestings.Ftp.FtpPort)

                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Ftp.FtpPort, new { @class = "input-mini", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Ftp.FtpPort) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Ftp.FtpPort)
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Ftp.FtpUsername)
                            @Html.HelpButtonFor(m => m.SystemSestings.Ftp.FtpUsername)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Ftp.FtpUsername, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Ftp.FtpUsername) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Ftp.FtpUsername)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Ftp.FtpPassword)
                            @Html.HelpButtonFor(m => m.SystemSestings.Ftp.FtpPassword)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Ftp.FtpPassword, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Ftp.FtpPassword) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Ftp.FtpPassword)
                            </div>
                        </div>

                    </div>                    


                    <div id="@Model.SystemSestings.Feed.GetType().Name" class="tab-pane fade @(Model.CurrentSettingsType == Model.SystemSestings.Feed.GetType().Name ? "active in" : "")">


                        <h3 class="header smaller lighter orange">

                            FEED FOLDERS

                        </h3>

                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.INFolder)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.INFolder)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.INFolder, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.INFolder) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.INFolder)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.OKFolder)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.OKFolder)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.OKFolder, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.OKFolder) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.OKFolder)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.KOFolder)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.KOFolder)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.KOFolder, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.KOFolder) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.KOFolder)
                            </div>
                        </div>

                        @*<div class="hr hr-double hr-dotted hr18"></div>*@

                        <h3 class="header smaller lighter orange">
                           
                            FEED NOTIFICATION 
                           
                        </h3>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.NotificationSubject)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.NotificationSubject)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.NotificationSubject, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.NotificationSubject) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.NotificationSubject)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.NotificationFromEmail)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.NotificationFromEmail)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.NotificationFromEmail, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.NotificationFromEmail) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.NotificationFromEmail)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelForRequired(m => m.SystemSestings.Feed.NotificationToEmails)
                            @Html.HelpButtonFor(m => m.SystemSestings.Feed.NotificationToEmails)
                            <div>
                                @Html.TextBoxFor(m => m.SystemSestings.Feed.NotificationToEmails, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.SystemSestings.Feed.NotificationToEmails) })
                                @Html.ValidationMessageFor(m => m.SystemSestings.Feed.NotificationToEmails)
                            </div>
                        </div>

                    </div>

                  </div>

            </div>            
            }
        </div>
    </div>


    @section PagePluginStyles
    {
        <link rel="stylesheet" href="/assets/css/jquery-ui.custom.min.css" />
        <link rel="stylesheet" href="/assets/css/chosen.css" />
        <link rel="stylesheet" href="/assets/css/datepicker.css" />
        <link rel="stylesheet" href="/assets/css/bootstrap-timepicker.css" />
        <link rel="stylesheet" href="/assets/css/daterangepicker.css" />
        <link rel="stylesheet" href="/assets/css/bootstrap-datetimepicker.css" />
        <link rel="stylesheet" href="/assets/css/colorpicker.css" />
    }

    @section PageInlineStyles
   {
        <style>
            
        </style>
    }



    @section PagePluginScripts
{
        <!-- page specific plugin scripts -->
        <!--[if lte IE 8]>
          <script src="/assets/js/excanvas.min.js"></script>
        <![endif]-->
        <script src="/assets/js/jquery-ui.custom.min.js"></script>
        <script src="/assets/js/jquery.ui.touch-punch.min.js"></script>
        <script src="/assets/js/chosen.jquery.min.js"></script>
        <script src="/assets/js/fuelux/fuelux.spinner.min.js"></script>
        <script src="/assets/js/date-time/bootstrap-datepicker.min.js"></script>
        <script src="/assets/js/date-time/bootstrap-timepicker.min.js"></script>
        <script src="/assets/js/date-time/moment.min.js"></script>
        <script src="/assets/js/date-time/daterangepicker.min.js"></script>
        <script src="/assets/js/date-time/bootstrap-datetimepicker.min.js"></script>
        <script src="/assets/js/bootstrap-colorpicker.min.js"></script>
        <script src="/assets/js/jquery.knob.min.js"></script>
        <script src="/assets/js/jquery.autosize.min.js"></script>
        <script src="/assets/js/jquery.inputlimiter.1.3.1.min.js"></script>
        <script src="/assets/js/jquery.maskedinput.min.js"></script>
        <script src="/assets/js/bootstrap-tag.min.js"></script>
        <script src="/assets/js/typeahead.jquery.min.js"></script>


        <script src="/assets/js/jquery.validate.min.js"></script>

        @Scripts.Render("~/bundles/jqueryval")
    }


    @section PageInlineScripts
{
        <!-- inline scripts related to this page -->
        <script type="text/javascript">

                    jQuery(function ($) {


                        $('#id-disable-check').on('click', function () {
                            var inp = $('#form-input-readonly').get(0);
                            if (inp.hasAttribute('disabled')) {
                                inp.setAttribute('readonly', 'true');
                                inp.removeAttribute('disabled');
                                inp.value = "This text field is readonly!";
                            }
                            else {
                                inp.setAttribute('disabled', 'disabled');
                                inp.removeAttribute('readonly');
                                inp.value = "This text field is disabled!";
                            }
                        });


                        $('.chosen-select').chosen({ allow_single_deselect: true });
                        //resize the chosen on window resize

                        $(window)
                        .off('resize.chosen')
                        .on('resize.chosen', function () {
                            $('.chosen-select').each(function () {
                                var $this = $(this);
                                $this.next().css({ 'width': $this.parent().width() });
                            })
                        }).trigger('resize.chosen');


                        $('#chosen-multiple-style').on('click', function (e) {
                            var target = $(e.target).find('input[type=radio]');
                            var which = parseInt(target.val());
                            if (which == 2) $('#form-field-select-4').addClass('tag-input-style');
                            else $('#form-field-select-4').removeClass('tag-input-style');
                        });


                        $('[data-rel=tooltip]').tooltip({ container: 'body' });
                        $('[data-rel=popover]').popover({ container: 'body' });

                        $('textarea[class*=autosize]').autosize({ append: "\n" });
                        $('textarea.limited').inputlimiter({
                            remText: '%n character%s remaining...',
                            limitText: 'max allowed : %n.'
                        });

                        $.mask.definitions['~'] = '[+-]';
                        $('.input-mask-date').mask('99/99/9999');
                        $('.input-mask-phone').mask('(999) 999-9999');
                        $('.input-mask-eyescript').mask('~9.99 ~9.99 999');
                        $(".input-mask-product").mask("a*-999-a999", { placeholder: " ", completed: function () { alert("You typed the following: " + this.val()); } });



                        $("#input-size-slider").css('width', '200px').slider({
                            value: 1,
                            range: "min",
                            min: 1,
                            max: 8,
                            step: 1,
                            slide: function (event, ui) {
                                var sizing = ['', 'input-sm', 'input-lg', 'input-mini', 'input-small', 'input-medium', 'input-large', 'input-xlarge', 'input-xxlarge'];
                                var val = parseInt(ui.value);
                                $('#form-field-4').attr('class', sizing[val]).val('.' + sizing[val]);
                            }
                        });

                        $("#input-span-slider").slider({
                            value: 1,
                            range: "min",
                            min: 1,
                            max: 12,
                            step: 1,
                            slide: function (event, ui) {
                                var val = parseInt(ui.value);
                                $('#form-field-5').attr('class', 'col-xs-' + val).val('.col-xs-' + val);
                            }
                        });


                        //"jQuery UI Slider"
                        //range slider tooltip example
                        $("#slider-range").css('height', '200px').slider({
                            orientation: "vertical",
                            range: true,
                            min: 0,
                            max: 100,
                            values: [17, 67],
                            slide: function (event, ui) {
                                var val = ui.values[$(ui.handle).index() - 1] + "";

                                if (!ui.handle.firstChild) {
                                    $("<div class='tooltip right in' style='display:none;left:16px;top:-6px;'><div class='tooltip-arrow'></div><div class='tooltip-inner'></div></div>")
                                    .prependTo(ui.handle);
                                }
                                $(ui.handle.firstChild).show().children().eq(1).text(val);
                            }
                        }).find('a').on('blur', function () {
                            $(this.firstChild).hide();
                        });


                        $("#slider-range-max").slider({
                            range: "max",
                            min: 1,
                            max: 10,
                            value: 2
                        });

                        $("#slider-eq > span").css({ width: '90%', 'float': 'left', margin: '15px' }).each(function () {
                            // read initial values from markup and remove that
                            var value = parseInt($(this).text(), 10);
                            $(this).empty().slider({
                                value: value,
                                range: "min",
                                animate: true

                            });
                        });

                        $("#slider-eq > span.ui-slider-purple").slider('disable');//disable third item


                        $('#id-input-file-1 , #id-input-file-2').ace_file_input({
                            no_file: 'No File ...',
                            btn_choose: 'Choose',
                            btn_change: 'Change',
                            droppable: false,
                            onchange: null,
                            thumbnail: false //| true | large
                            //whitelist:'gif|png|jpg|jpeg'
                            //blacklist:'exe|php'
                            //onchange:''
                            //
                        });
                        //pre-show a file name, for example a previously selected file
                        //$('#id-input-file-1').ace_file_input('show_file_list', ['myfile.txt'])


                        $('#id-input-file-3').ace_file_input({
                            style: 'well',
                            btn_choose: 'Drop formatted-CSV epg files here or click to choose',
                            btn_change: null,
                            no_icon: 'ace-icon fa fa-cloud-upload',
                            droppable: true,
                            thumbnail: 'small'//large | fit
                            //,icon_remove:null//set null, to hide remove/reset button
                            /**,before_change:function(files, dropped) {
                                //Check an example below
                                //or examples/file-upload.html
                                return true;
                            }*/
                            /**,before_remove : function() {
                                return true;
                            }*/
                            ,
                            preview_error: function (filename, error_code) {
                                //name of the file that failed
                                //error_code values
                                //1 = 'FILE_LOAD_FAILED',
                                //2 = 'IMAGE_LOAD_FAILED',
                                //3 = 'THUMBNAIL_FAILED'
                                //alert(error_code);
                            }

                        }).on('change', function () {
                            //console.log($(this).data('ace_input_files'));
                            //console.log($(this).data('ace_input_method'));
                        });


                        //dynamically change allowed formats by changing allowExt && allowMime function
                        $('#id-file-format').removeAttr('checked').on('change', function () {
                            var whitelist_ext, whitelist_mime;
                            var btn_choose
                            var no_icon
                            if (this.checked) {
                                btn_choose = "Drop images here or click to choose";
                                no_icon = "ace-icon fa fa-picture-o";

                                whitelist_ext = ["jpeg", "jpg", "png", "gif", "bmp"];
                                whitelist_mime = ["image/jpg", "image/jpeg", "image/png", "image/gif", "image/bmp"];
                            }
                            else {
                                btn_choose = "Drop formatted-CSV epg files here or click to choose";
                                no_icon = "ace-icon fa fa-cloud-upload";

                                whitelist_ext = null;//all extensions are acceptable
                                whitelist_mime = null;//all mimes are acceptable
                            }
                            var file_input = $('#id-input-file-3');
                            file_input
                            .ace_file_input('update_settings',
                            {
                                'btn_choose': btn_choose,
                                'no_icon': no_icon,
                                'allowExt': whitelist_ext,
                                'allowMime': whitelist_mime
                            })
                            file_input.ace_file_input('reset_input');

                            file_input
                            .off('file.error.ace')
                            .on('file.error.ace', function (e, info) {
                                //console.log(info.file_count);//number of selected files
                                //console.log(info.invalid_count);//number of invalid files
                                //console.log(info.error_list);//a list of errors in the following format

                                //info.error_count['ext']
                                //info.error_count['mime']
                                //info.error_count['size']

                                //info.error_list['ext']  = [list of file names with invalid extension]
                                //info.error_list['mime'] = [list of file names with invalid mimetype]
                                //info.error_list['size'] = [list of file names with invalid size]


                                /**
                                if( !info.dropped ) {
                                    //perhapse reset file field if files have been selected, and there are invalid files among them
                                    //when files are dropped, only valid files will be added to our file array
                                    e.preventDefault();//it will rest input
                                }
                                */


                                //if files have been selected (not dropped), you can choose to reset input
                                //because browser keeps all selected files anyway and this cannot be changed
                                //we can only reset file field to become empty again
                                //on any case you still should check files with your server side script
                                //because any arbitrary file can be uploaded by user and it's not safe to rely on browser-side measures
                            });

                        });

                        $('#spinner1').ace_spinner({ value: 0, min: 0, max: 200, step: 10, btn_up_class: 'btn-info', btn_down_class: 'btn-info' })
                        .on('change', function () {
                            //alert(this.value)
                        });
                        $('#spinner2').ace_spinner({ value: 0, min: 0, max: 10000, step: 100, touch_spinner: true, icon_up: 'ace-icon fa fa-caret-up', icon_down: 'ace-icon fa fa-caret-down' });
                        $('#spinner3').ace_spinner({ value: 0, min: -100, max: 100, step: 10, on_sides: true, icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger' });
                        //$('#spinner1').ace_spinner('disable').ace_spinner('value', 11);
                        //or
                        //$('#spinner1').closest('.ace-spinner').spinner('disable').spinner('enable').spinner('value', 11);//disable, enable or change value
                        //$('#spinner1').closest('.ace-spinner').spinner('value', 0);//reset to 0


                        //datepicker plugin
                        //link
                        $('.date-picker').datepicker({
                            autoclose: true,
                            todayHighlight: true
                        })
                        //show datepicker when clicking on the icon
                        .next().on(ace.click_event, function () {
                            $(this).prev().focus();
                        });

                        //or change it into a date range picker
                        $('.input-daterange').datepicker({ autoclose: true });


                        //to translate the daterange picker, please copy the "examples/daterange-fr.js" contents here before initialization
                        $('input[name=date-range-picker]').daterangepicker({
                            'applyClass': 'btn-sm btn-success',
                            'cancelClass': 'btn-sm btn-default',
                            locale: {
                                applyLabel: 'Apply',
                                cancelLabel: 'Cancel',
                            }
                        })
                        .prev().on(ace.click_event, function () {
                            $(this).next().focus();
                        });


                        $('#timepicker1').timepicker({
                            minuteStep: 1,
                            showSeconds: true,
                            showMeridian: false
                        }).next().on(ace.click_event, function () {
                            $(this).prev().focus();
                        });

                        $('#date-timepicker1').datetimepicker().next().on(ace.click_event, function () {
                            $(this).prev().focus();
                        });


                        $('#colorpicker1').colorpicker();

                        $('#simple-colorpicker-1').ace_colorpicker();
                        //$('#simple-colorpicker-1').ace_colorpicker('pick', 2);//select 2nd color
                        //$('#simple-colorpicker-1').ace_colorpicker('pick', '#fbe983');//select #fbe983 color
                        //var picker = $('#simple-colorpicker-1').data('ace_colorpicker')
                        //picker.pick('red', true);//insert the color if it doesn't exist


                        $(".knob").knob();


                        var tag_input = $('#form-field-tags');
                        try {
                            tag_input.tag(
                              {
                                  placeholder: tag_input.attr('placeholder'),
                                  //enable typeahead by specifying the source array
                                  source: ace.vars['US_STATES'],//defined in ace.js >> ace.enable_search_ahead
                                  /**
                                  //or fetch data from database, fetch those that match "query"
                                  source: function(query, process) {
                                    $.ajax({url: 'remote_source.php?q='+encodeURIComponent(query)})
                                    .done(function(result_items){
                                      process(result_items);
                                    });
                                  }
                                  */
                              }
                            )

                            //programmatically add a new
                            var $tag_obj = $('#form-field-tags').data('tag');
                            $tag_obj.add('Programmatically Added');
                        }
                        catch (e) {
                            //display a textarea for old IE, because it doesn't support this plugin or another one I tried!
                            tag_input.after('<textarea id="' + tag_input.attr('id') + '" name="' + tag_input.attr('name') + '" rows="3">' + tag_input.val() + '</textarea>').remove();
                            //$('#form-field-tags').autosize({append: "\n"});
                        }


                        //////////

                        //typeahead.js
                        //example taken from plugin's page at: https://twitter.github.io/typeahead.js/examples/
                        var substringMatcher = function (strs) {
                            return function findMatches(q, cb) {
                                var matches, substringRegex;

                                // an array that will be populated with substring matches
                                matches = [];

                                // regex used to determine if a string contains the substring `q`
                                substrRegex = new RegExp(q, 'i');

                                // iterate through the pool of strings and for any string that
                                // contains the substring `q`, add it to the `matches` array
                                $.each(strs, function (i, str) {
                                    if (substrRegex.test(str)) {
                                        // the typeahead jQuery plugin expects suggestions to a
                                        // JavaScript object, refer to typeahead docs for more info
                                        matches.push({ value: str });
                                    }
                                });

                                cb(matches);
                            }
                        }

                        $('input.typeahead').typeahead({
                            hint: true,
                            highlight: true,
                            minLength: 1
                        }, {
                            name: 'states',
                            displayKey: 'value',
                            source: substringMatcher(ace.vars['US_STATES'])
                        });



                        /////////
                        $('#modal-form input[type=file]').ace_file_input({
                            style: 'well',
                            btn_choose: 'Drop formatted-CSV epg files here or click to choose',
                            btn_change: null,
                            no_icon: 'ace-icon fa fa-cloud-upload',
                            droppable: true,
                            thumbnail: 'large',
                            allowExt: ["csv", "csv1"],
                        })

                        //chosen plugin inside a modal will have a zero width because the select element is originally hidden
                        //and its width cannot be determined.
                        //so we set the width after modal is show
                        $('#modal-form').on('shown.bs.modal', function () {
                            $(this).find('.chosen-container').each(function () {
                                $(this).find('a:first-child').css('width', '210px');
                                $(this).find('.chosen-drop').css('width', '210px');
                                $(this).find('.chosen-search input').css('width', '200px');
                            });
                        })
                        /**
                        //or you can activate the chosen plugin after modal is shown
                        //this way select element becomes visible with dimensions and chosen works as expected
                        $('#modal-form').on('shown', function () {
                            $(this).find('.modal-chosen').chosen();
                        })
                        */

                        /***********CUSTOM CHANGED****************/
                        $('#@(Html.IdFor(m=>m.SystemSestings.Cache.SystemDefaultCacheDuration))')
                            .ace_spinner({
                                value: 0, min: 0, max: 9999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });
              
                        $('#@(Html.IdFor(m=>m.SystemSestings.Cache.WebApiEpgWebsiteCacheDuration))')
                            .ace_spinner({
                                value: 0, min: 0, max: 9999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });

                        $('#@(Html.IdFor(m=>m.SystemSestings.Cache.WebApiEpgOTTCacheDuration))')
                            .ace_spinner({
                                value: 0, min: 0, max: 9999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });

                        $('#@(Html.IdFor(m=>m.SystemSestings.Mail.SmtpPort))')
                            .ace_spinner({
                                value: 0, min: 0, max: 99999999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });


                        $('#@(Html.IdFor(m=>m.SystemSestings.Ftp.FtpPort))')
                            .ace_spinner({
                                value: 0, min: 0, max: 99999999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });

                        $('#@(Html.IdFor(m=>m.SystemSestings.Mail.SmtpTimeout))')
                            .ace_spinner({
                                value: 0, min: 0, max: 99999999, step: 1, on_sides: true,
                                icon_up: 'ace-icon fa fa-plus smaller-75', icon_down: 'ace-icon fa fa-minus smaller-75', btn_up_class: 'btn-success', btn_down_class: 'btn-danger'
                            });


                        $('#myTab a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                            var target = e.target.getAttribute("href");

                            target = target.substr(1, target.length);
                            //alert(target);

                            $('#@(Html.IdFor(m=>m.CurrentSettingsType))').val(target);
                        });

                        $('#frmUploadEpgFiles').validate({
                            errorElement: 'div',
                            errorClass: 'help-block',
                            focusInvalid: false,
                            rules: {
                                FtpServer: {
                                    required: true,
                                },
                                FtpPort: {
                                    required: true,
                                },
                                FtpFolder: {
                                    required: true
                                },
                                FtpUsername: {
                                    required: true,
                                },
                                FtpPassword: {
                                    required: true,
                                },
                            },

                            messages: {
                                FtpServer: {
                                    required: "Please provide a valid FTP Server.",
                                },
                                FtpPort: {
                                    required: "Please provide a valid FTP Port.",
                                },
                                FtpFolder: {
                                    required: "Please provide a valid FTP Folder.",
                                },
                                FtpUsername: {
                                    required: "Please provide a valid FTP Username.",
                                },
                                FtpPassword: {
                                    required: "Please specify a valid FTP Password.",
                                },
                            },


                            highlight: function (e) {
                                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                            },

                            success: function (e) {
                                $(e).closest('.form-group').removeClass('has-error');//.addClass('has-info');
                                $(e).remove();
                            },

                            errorPlacement: function (error, element) {
                                if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                                    var controls = element.closest('div[class*="col-"]');
                                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                                }
                                else if (element.is('.select2')) {
                                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                                }
                                else if (element.is('.chosen-select')) {
                                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                                }
                                else error.insertAfter(element.parent());
                            },

                            submitHandler: function (form) {
                                // do other things for a valid form
                                form.submit();
                            },
                            invalidHandler: function (form) {
                            }
                        });


                    });
        </script>
    }
