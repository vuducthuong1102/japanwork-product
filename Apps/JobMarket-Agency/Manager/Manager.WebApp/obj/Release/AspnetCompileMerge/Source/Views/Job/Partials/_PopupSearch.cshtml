@using Manager.WebApp.Resources
@using Manager.WebApp.Caching;
@using Manager.SharedLibs;
@model Manager.WebApp.Models.ManageJobModel
@{
    var currentLang = UserCookieManager.GetCurrentLanguageOrDefault();
}

<div class="form-group m-form__group row">
    <div class="col-md-6">
        <input type="hidden" class="title-search" value="@ManagerResource.PH_SEARCH_JOB" />
        <select class="form-control selectpicker-search btn-white" name="@Html.NameFor(m=>m.Status)">
            <option value="-1">
                @ManagerResource.LB_SELECT_STATUS
            </option>
            @foreach (var item in Enum.GetValues(typeof(EnumJobStatus)))
            {
                var chkItem = (int)item;
                var chkStr = string.Empty;
                if (chkItem == Model.Status)
                {
                    chkStr = "selected";
                }
                <option value="@chkItem" @chkStr>@EnumExtensions.GetEnumDescription((Enum)item)</option>
            }
        </select>
    </div>

    <div class="col-md-6">
        <select class="form-control selectpicker-search select-prefecture" name="prefecture_id" data-live-search="true" data-size="7">
            @if (Model.Regions.HasData())
            {
                <option value="0">@ManagerResource.LB_SELECT_PREFECTURE</option>

                foreach (var item in Model.Regions)
                {
                    if (item.Prefectures.HasData())
                    {
                        var regionName = item.furigana;
                        if (currentLang == "ja-JP")
                        {
                            regionName = item.region;
                        }
                        <optgroup label="@regionName">
                            @foreach (var subItem in item.Prefectures)
                            {
                                var prefectureName = subItem.furigana;
                                if (currentLang == "ja-JP")
                                {
                                    prefectureName = subItem.prefecture;
                                }
                                <option value="@subItem.id" @(Model.prefecture_id == subItem.id ? "selected" : "")>
                                    @prefectureName
                                </option>
                            }
                        </optgroup>
                    }
                }
            }
        </select>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <select id="@Html.IdFor(m=>m.staff_id)" name="@Html.NameFor(m=>m.staff_id)" class="filter-search form-control selectpicker-search m-input m-input--square">
            <option value="0">@ManagerResource.LB_SELECT_PIC</option>
            @if (Model.Staffs.HasData())
            {
                foreach (var item in Model.Staffs)
                {
                    <option value="@item.StaffId" @(Model.staff_id == item.StaffId ? "selected" : "")>
                        @item.FullName
                    </option>
                }
            }
        </select>
    </div>
    <div class="col-md-6">
        <select class="form-control selectpicker-search" name="@Html.NameFor(m=>m.japanese_level_number)">
            <option value="0">@ManagerResource.LB_SELECT_JAPANESE_LEVEL</option>
            @if (Model.JapaneseLevels.HasData())
            {
                foreach (var item in Model.JapaneseLevels)
                {
                    <option value="@item.level_number" @(item.level_number == Model.japanese_level_number ? "selected" : string.Empty)> @item.level</option>
                }
            }
        </select>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <select onchange="handleEmploymentTypeChange(this)" class="form-control selectpicker-search select-employment-type" name="@Html.NameFor(m=>m.employment_type_id)">
            <option value="0" @(Model.employment_type_id == 0 ? "selected" : "")>@ManagerResource.LB_SELECT_EMPLOYMENT_TYPE</option>
            @if (Model.EmploymentTypes.HasData())
            {
                foreach (var item in Model.EmploymentTypes)
                {
                    var calculateLabel = string.Empty;
                    var typeName = string.Empty;
                    if (item.calculate_by == (int)EnumEmploymentCalculateBy.Month)
                    {
                        calculateLabel = ManagerResource.LB_SALARY_BY_MONTH;
                    }
                    else
                    {
                        calculateLabel = ManagerResource.LB_SALARY_BY_HOUR;
                    }

                    if (item.LangList.HasData())
                    {
                        typeName = item.LangList.Where(x => x.language_code == currentLang).Select(x => x.employment_type).FirstOrDefault();
                    }

                    if (string.IsNullOrEmpty(typeName))
                    {
                        typeName = item.employment_type;
                    }

                    <option value="@item.id" data-calculate="@calculateLabel" @(item.id == Model.employment_type_id ? "selected" : string.Empty)> @typeName</option>
                }
            }
        </select>
    </div>
    <div class="col-md-6">
        <select class="form-control selectpicker-search btn-white" id="@Html.IdFor(m=>m.translate_status)" name="@Html.NameFor(m=>m.translate_status)">
            <option value="-1">
                @ManagerResource.LB_SELECT_TRANSLATE_STATUS
            </option>
            @foreach (var item in Enum.GetValues(typeof(EnumTranslateStatus)))
            {
                var chkItem = (int)item;
                var chkStr = string.Empty;
                if (chkItem == Model.translate_status)
                {
                    chkStr = "selected";
                }
                <option value="@chkItem" @chkStr>@EnumExtensions.GetEnumDescription((Enum)item)</option>
            }
        </select>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6 select-field">
        <select class="form-control selectpicker-search select_sub_field" name="sub_id" data-live-search="true" data-size="7">
            <option value="0">@ManagerResource.LB_SELECT_SUB_FIELD</option>
            @if (Model.Fields.HasData() && Model.employment_type_id > 0)
            {
                foreach (var field in Model.Fields)
                {
                    if (field.Sub_fields.HasData())
                    {
                        var fieldName = field.LangList.Where(x => x.language_code == currentLang).Select(x => x.field).FirstOrDefault();
                        if (string.IsNullOrEmpty(fieldName))
                        {
                            fieldName = field.field;
                        }

                        <optgroup label="@fieldName">
                            @foreach (var sub in field.Sub_fields)
                            {
                                var subName = sub.LangList.Where(x => x.language_code == currentLang).Select(x => x.sub_field).FirstOrDefault();
                                if (string.IsNullOrEmpty(subName))
                                {
                                    subName = sub.sub_field;
                                }

                                <option value="@sub.id" @(Model.sub_id == sub.id ? "selected" : "")>
                                    @subName
                                </option>
                            }
                        </optgroup>
                    }
                }
            }
        </select>
    </div>
    <div class="col-md-6">
        <div class="input-group">
            <label for="salary_min" class="lb-filter">
                @ManagerResource.LB_WAGE
            </label>
            @*@Html.TextBoxFor(m => m.salary_min, new { @class = "form-control m-input text-right number", style = "max-width:100px" })*@
            <input type="text" class="form-control m-input text-right number number-format" style="max-width:130px" name="salary_min" value="@Model.salary_min" />
            <div class="input-group-prepend">
                <span class="input-group-text">
                    ~
                </span>
            </div>
            <input type="text" class="form-control m-input text-right number number-format" style="max-width:130px" name="salary_max" value="@Model.salary_max" />
            @*@Html.TextBoxFor(m => m.salary_max, new { @class = "form-control m-input text-right number", style = "max-width:100px" })*@
            <div class="m-checkbox-inline pl-2 pt-2">
                @ManagerResource.LB_YEN
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <button type="submit" class="btn btn-info float-right btn-sm">
            <i class="fa fa-search"></i> @ManagerResource.LB_SEARCH
        </button>
        <button type="button" class="btn btn-warning float-left btn-sm mr-3 reset-btn">
            <i class="fa fa-eraser"></i> @ManagerResource.BT_CLEAR
        </button>
    </div>
</div>