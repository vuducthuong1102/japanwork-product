@using MySite.Resources;
@using System.Linq;
@using MySite.ShareLibs.Common;
@using MySite.Helpers;
@using ApiMySiteSocial.DB.Sql.Entities;
@model  List<IdentityNotification>

@if (Model != null)
{
    if (Model != null && Model.Count > 0)
    {
        var listToday = Model.Where(x => x.CreatedDate.Value.Date == DateTime.Now.Date).ToList();
        var lisInPast = Model.Where(x => x.CreatedDate.Value.Date < DateTime.Now.Date).ToList();

        @RenderToDayNotif(listToday)

        @RenderInPastNotif(lisInPast)
    }
    else
    {
        <div class="no-notif"></div>
    }
}

@helper RenderToDayNotif(List<IdentityNotification> notifs)
{
    if (notifs != null && notifs.Count > 0)
    {
        foreach (var item in notifs)
        {
            var urlRdirect = "/account/notifdetail/" + item.Id;
            <div class="item @((!item.IsRead) ? "active" : string.Empty)" onclick="window.location.href='@urlRdirect'; ">
                <div class="avatar"><img src="@item.ActorAvatar" alt="@item.ActorDisplayName" /></div>
                <div class="content">
                    @RenderNotifContent(item)
                    <span>@RenderNotifIcon(item) @DateHelpers.FormatToStringTitle(item.CreatedDate.Value)</span>
                </div>
                <div class="clearfix"></div>
            </div>
        }
    }
}


@helper RenderInPastNotif(List<IdentityNotification> notifs)
{
if (notifs != null && notifs.Count > 0)
{
        <div class="dividerr">
            @UserWebResource.LB_BEFORE_THAT
        </div>
    foreach (var item in notifs)
    {
        var urlRdirect = "/account/notifdetail/" + item.Id;
            <div class="item @((!item.IsRead) ? "active" : string.Empty)" onclick="window.location.href='@urlRdirect'; ">
                <div class="avatar"><img src="@item.ActorAvatar" alt="@item.ActorDisplayName" /></div>
                <div class="content">
                    @RenderNotifContent(item)
                    @RenderNotifIcon(item)<span> @DateHelpers.FormatToStringTitle(item.CreatedDate.Value)</span>
                </div>
                <div class="clearfix"></div>
            </div>
        }
    }
}


@helper RenderNotifContent(IdentityNotification item)
{
    var itemDes = (!string.IsNullOrEmpty(item.Description)) ? ": " + HtmlHelpers.ShowHtmlTextByLimit(item.Description) : string.Empty;
    string result = "";
    if (item.ActionType == CommonAction.Follow)
    {
        result = @UserWebResource.LB_FOLLOWING_YOU;
    }
    else if (item.ActionType == CommonAction.Like)
    {
        if (item.ObjectType == CommonObject.Comment)
        {
            result = @UserWebResource.LB_LIKE_COMMENT + @itemDes;
        }
        else if (item.ObjectType == CommonObject.Post)
        {
            result = @UserWebResource.LB_LIKED_YOUR_POST;
        }
    }
    else if (item.ActionType == CommonAction.Comment)
    {
        result = @UserWebResource.LB_COMMENTED_ON_POST;

    }
    else if (item.ActionType == CommonAction.CommentReply)
    {

        result = @UserWebResource.LB_REPLIED_COMMENT + @itemDes;
    }
    else if (item.ActionType == CommonAction.Share)
    {

        result = @UserWebResource.LB_SHARED_YOUR_POST;
    }
    <p class="mb0">
        <span class="bo">@item.ActorDisplayName</span> @result
    </p>
}

@helper RenderNotifIcon(IdentityNotification item)
{
    if (!item.IsRead && !item.IsViewed)
    {
        @*<span>@UserWebResource.LB_NEW</span>*@
    }
    else
    {

        if (item.ActionType == CommonAction.Like)
        {
            <i class="icon icon-heart_active mr5 fz-16 fll"></i>
        }
        else
        {
            <i class="icon icon-comment mr5 text-blue fz-16 fll"></i>
        }
    }
}

